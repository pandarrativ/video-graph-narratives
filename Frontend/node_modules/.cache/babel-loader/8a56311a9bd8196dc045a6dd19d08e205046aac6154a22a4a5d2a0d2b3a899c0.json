{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/AnnVideo/Frontend/src/components/ChatBox.js\",\n  _s = $RefreshSig$();\n// components/ChatBox.js\nimport React, { useRef, useState, useEffect } from 'react';\nimport \"../assets/css/ChatBox.css\";\n// import axios from \"axios\";\n// import { widgetHelperRouter } from '../config/routeConfig';\nimport SenderIcon from \"../assets/icon/icon_message_send.svg\";\nimport axios from 'axios';\nimport { chatRouter } from '../utils/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = props => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n\n  // send msg to gpt after user input\n  const sendToGPT = () => {\n    // setMessages([...messages, {role:\"assistant\", content:\"It is a alpaca with its head looking to the right.\"}])\n    // console.log(JSON.parse(localStorage.getItem(\"ann-boxes\")));\n    console.log(messages);\n    let image = props.captureScreenshot();\n    axios.post(chatRouter, {\n      boxes: JSON.parse(localStorage.getItem(\"ann-boxes\")),\n      messages: messages,\n      image: image\n    }).then(resp => {\n      console.log(resp);\n      setMessages([...messages, {\n        role: \"assistant\",\n        content: resp.data.resp.content\n      }]);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  // button click\n  const sendMessage = e => {\n    e.preventDefault();\n    setMessages([...messages, {\n      role: \"user\",\n      content: msg\n    }]);\n    setMsg(\"\");\n  };\n  const handleMsgChange = e => {\n    setMsg(e.target.value);\n  };\n  useEffect(() => {\n    if (messages[messages.length - 1] && messages[messages.length - 1].role === \"user\") {\n      sendToGPT();\n    }\n  }, [messages, sendToGPT]);\n\n  // scroll to bottom\n  const messagesEndRef = useRef();\n  useEffect(() => {\n    // scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"helper-conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"helper-conversation-header\",\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"helper-conversation-body\",\n      children: [messages.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `helper-conversation-message-box helper-conversation-message-me-${item.role === \"user\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"helper-conversation-bottom\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"helper-conversation-message-input\",\n        placeholder: \"Type your message\",\n        type: \"text\",\n        onChange: handleMsgChange,\n        value: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"helper-conversation-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: SenderIcon,\n          alt: \"icon for sending message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"wi4esJqcCCKhh6Mp4ntaDnZ1YqE=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useRef","useState","useEffect","SenderIcon","axios","chatRouter","jsxDEV","_jsxDEV","ChatBox","props","_s","messages","setMessages","msg","setMsg","sendToGPT","console","log","image","captureScreenshot","post","boxes","JSON","parse","localStorage","getItem","then","resp","role","content","data","catch","e","sendMessage","preventDefault","handleMsgChange","target","value","length","messagesEndRef","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","i","ref","onSubmit","placeholder","type","onChange","src","alt","_c","$RefreshReg$"],"sources":["/home/yhx/Projects/AnnVideo/Frontend/src/components/ChatBox.js"],"sourcesContent":["// components/ChatBox.js\nimport React, { useRef, useState, useEffect } from 'react';\nimport \"../assets/css/ChatBox.css\";\n// import axios from \"axios\";\n// import { widgetHelperRouter } from '../config/routeConfig';\nimport SenderIcon from \"../assets/icon/icon_message_send.svg\";\nimport axios from 'axios';\nimport { chatRouter } from '../utils/router';\n\nconst ChatBox = (props) => {\n    const [messages, setMessages] = useState([]);\n    const [msg, setMsg] = useState(\"\");\n\n    // send msg to gpt after user input\n    const sendToGPT = () => {\n      // setMessages([...messages, {role:\"assistant\", content:\"It is a alpaca with its head looking to the right.\"}])\n      // console.log(JSON.parse(localStorage.getItem(\"ann-boxes\")));\n      console.log(messages)\n      let image = props.captureScreenshot();\n\n      axios.post(chatRouter, {\n        boxes:JSON.parse(localStorage.getItem(\"ann-boxes\")),\n        messages:messages,\n        image:image,\n      })\n      .then((resp) => {\n        console.log(resp);\n        setMessages([...messages, {role:\"assistant\", content:resp.data.resp.content}])\n      })\n      .catch((e) => {\n        console.log(e);\n      })\n    }\n    // button click\n    const sendMessage = (e) => {\n        e.preventDefault();\n        setMessages([...messages, {role:\"user\", content:msg}])\n        setMsg(\"\");\n    }\n\n    const handleMsgChange = (e) => {\n        setMsg(e.target.value);\n    }\n\n    useEffect(() => {\n      if(messages[messages.length-1] && messages[messages.length-1].role === \"user\"){\n        sendToGPT();\n      }\n    }, [messages, sendToGPT])\n\n\n\n      // scroll to bottom\n    const messagesEndRef = useRef();\n      useEffect(() => {\n          // scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n          messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n  return (\n    <div className=\"helper-conversation\">\n      <div className='helper-conversation-header'>\n          Conversation\n      </div>\n\n      <div className='helper-conversation-body'>\n\n\n          {messages.map((item, i) => {\n              return (\n                  <div className={`helper-conversation-message-box helper-conversation-message-me-${item.role === \"user\"}`} key={i}>\n                      <div>\n                          {item.content}\n                      </div>\n                  </div>\n\n                  );\n              })}\n                  \n              <div ref={messagesEndRef} />\n      </div>\n\n      <form className='helper-conversation-bottom' onSubmit={sendMessage}>\n          <input className='helper-conversation-message-input' placeholder='Type your message' type='text' onChange={handleMsgChange} value={msg}></input>\n          <button type='submit' className=\"helper-conversation-btn\">\n                  <img src={SenderIcon} alt=\"icon for sending message\"></img>\n          </button>\n      </form>\n  </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}