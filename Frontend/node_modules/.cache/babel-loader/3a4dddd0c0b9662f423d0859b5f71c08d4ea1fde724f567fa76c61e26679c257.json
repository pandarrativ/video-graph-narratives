{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/AnnVideo/Frontend/src/components/ImageCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport \"../assets/css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageCanvas(props) {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  const [canvas, setCanvas] = useState();\n  const [ctx, setCtx] = useState();\n  const [canvasBox, setCanvasBox] = useState();\n  const [ctxBox, setCtxBox] = useState();\n  // calculate the x-y of the canvas\n  const [offsetX, setOffsetX] = useState();\n  const [offsetY, setOffsetY] = useState();\n  const canvasRef = useRef();\n  const canvasBoxRef = useRef();\n  useEffect(() => {\n    const imageCanvas = canvasRef.current;\n    setCanvas(imageCanvas);\n    setCtx(imageCanvas.getContext(\"2d\"));\n    setOffsetX(imageCanvas.offsetLeft);\n    setOffsetY(imageCanvas.offsetTop);\n    setCtxBox(canvasBoxRef.current);\n  }, []);\n\n  ///////////////////// for drawing one box ////////////////////////////\n  //  flag: where user is dragging the box\n  const [isDown, setIsDown] = useState(false);\n  const [startX, setStartX] = useState();\n  const [startY, setStartY] = useState();\n  const [prevStartX, setPrevStartX] = useState(0);\n  const [prevStartY, setPrevStartY] = useState(0);\n  const [prevWidth, setPrevWidth] = useState(0);\n  const [prevHeight, setPrevHeight] = useState(0);\n  const handleMouseDown = e => {\n    console.log(\"asd\");\n    e.preventDefault();\n    e.stopPropagation();\n\n    // save the starting x/y of the rectangle\n    setStartX(parseInt(e.clientX - offsetX));\n    console.log(e.clientX, \" \", offsetX);\n    setStartY(parseInt(e.clientY - offsetY));\n\n    // set a flag indicating the drag has begun\n    setIsDown(true);\n  };\n  const handleMouseUp = e => {\n    console.log(\"dsa\");\n    e.preventDefault();\n    e.stopPropagation();\n\n    // the drag is over, clear the dragging flag\n    setIsDown(false);\n    ctx.strokeRect(prevStartX, prevStartY, prevWidth, prevHeight);\n  };\n  const handleMouseMove = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // if we're not dragging, just return\n    if (!isDown) {\n      return;\n    }\n\n    // get the current mouse position relative to \n    let mouseX = parseInt(e.clientX - offsetX);\n    let mouseY = parseInt(e.clientY - offsetY);\n\n    // calculate the rectangle width/height based on starting vs current mouse position\n    var width = mouseX - startX;\n    var height = mouseY - startY;\n\n    // clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // draw a new rect from the start position to the current mouse position\n    ctx.strokeStyle = \"green\";\n    // ctx.lineWidth = 2;\n    ctx.strokeRect(startX, startY, width, height);\n    console.log(startX, \" \", startY, \" \", width, \" \", height);\n    setPrevStartX(startX);\n    setPrevStartY(startY);\n    setPrevWidth(width);\n    setPrevHeight(height);\n  };\n  const handleMouseOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // the drag is over, clear the dragging flag\n    setIsDown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"overlay\",\n      ref: canvasBoxRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"imageCanvas\",\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseMove: handleMouseMove,\n      onMouseOut: handleMouseOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageCanvas, \"IEEV/uvcq/ozpZh1VFMvBfRUnFc=\");\n_c = ImageCanvas;\nexport default ImageCanvas;\nvar _c;\n$RefreshReg$(_c, \"ImageCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ImageCanvas","props","_s","boxes","setBoxes","canvas","setCanvas","ctx","setCtx","canvasBox","setCanvasBox","ctxBox","setCtxBox","offsetX","setOffsetX","offsetY","setOffsetY","canvasRef","canvasBoxRef","imageCanvas","current","getContext","offsetLeft","offsetTop","isDown","setIsDown","startX","setStartX","startY","setStartY","prevStartX","setPrevStartX","prevStartY","setPrevStartY","prevWidth","setPrevWidth","prevHeight","setPrevHeight","handleMouseDown","e","console","log","preventDefault","stopPropagation","parseInt","clientX","clientY","handleMouseUp","strokeRect","handleMouseMove","mouseX","mouseY","width","height","clearRect","strokeStyle","handleMouseOut","id","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseUp","onMouseMove","onMouseOut","_c","$RefreshReg$"],"sources":["/home/yhx/Projects/AnnVideo/Frontend/src/components/ImageCanvas.js"],"sourcesContent":["import React,{useRef, useEffect, useState} from 'react';\nimport \"../assets/css/canvas.css\";\n\nfunction ImageCanvas(props) {\n    const [boxes, setBoxes] = useState([]);\n    const [canvas, setCanvas] = useState();\n    const [ctx, setCtx] = useState();\n    const [canvasBox, setCanvasBox] = useState();\n    const [ctxBox, setCtxBox] = useState();\n    // calculate the x-y of the canvas\n    const [offsetX, setOffsetX] = useState();\n    const [offsetY, setOffsetY] = useState();\n\n    const canvasRef = useRef();\n    const canvasBoxRef = useRef();\n    useEffect(() => {\n        const imageCanvas = canvasRef.current;\n        setCanvas(imageCanvas);\n        setCtx(imageCanvas.getContext(\"2d\"));\n        setOffsetX(imageCanvas.offsetLeft);\n        setOffsetY(imageCanvas.offsetTop)\n\n        setCtxBox(canvasBoxRef.current)\n\n\n    },[])\n\n\n\n    ///////////////////// for drawing one box ////////////////////////////\n    //  flag: where user is dragging the box\n    const [isDown, setIsDown] = useState(false);\n    const [startX, setStartX] = useState();\n    const [startY, setStartY] = useState();\n\n    const [prevStartX, setPrevStartX] = useState(0);\n    const [prevStartY, setPrevStartY] = useState(0);\n\n    const [prevWidth, setPrevWidth] = useState(0);\n    const [prevHeight, setPrevHeight] = useState(0);    \n\n\n    const handleMouseDown = (e) => {\n        console.log(\"asd\");\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // save the starting x/y of the rectangle\n        setStartX( parseInt(e.clientX - offsetX) );\n        console.log(e.clientX, \" \", offsetX);\n        setStartY(parseInt(e.clientY - offsetY));\n    \n        // set a flag indicating the drag has begun\n        setIsDown(true);\n    };\n\n    const handleMouseUp = (e) => {\n        console.log(\"dsa\");\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // the drag is over, clear the dragging flag\n        setIsDown(false);\n        ctx.strokeRect(prevStartX, prevStartY, prevWidth, prevHeight);\n    }\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // if we're not dragging, just return\n        if (!isDown) {\n            return;\n        }\n    \n        // get the current mouse position relative to \n        let mouseX = parseInt(e.clientX - offsetX);\n        let mouseY = parseInt(e.clientY - offsetY);    \n    \n        // calculate the rectangle width/height based on starting vs current mouse position\n        var width = mouseX - startX;\n        var height = mouseY - startY;\n    \n            // clear the canvas\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n        // draw a new rect from the start position to the current mouse position\n        ctx.strokeStyle = \"green\";\n        // ctx.lineWidth = 2;\n        ctx.strokeRect(startX, startY, width, height);\n        console.log(startX,\" \" ,startY,\" \" ,width,\" \" ,height);\n\n\n        setPrevStartX(startX);\n        setPrevStartY(startY);\n    \n        setPrevWidth(width);\n        setPrevHeight(height);\n    }\n\n\n    const handleMouseOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // the drag is over, clear the dragging flag\n        setIsDown(false);\n    }\n\n\n    return (\n        <div id='canvas-wrapper'>\n            <canvas id=\"overlay\" ref={canvasBoxRef}></canvas>\n            <canvas \n                id=\"imageCanvas\"\n                ref={canvasRef} \n                onMouseDown={handleMouseDown} \n                onMouseUp={handleMouseUp}\n                onMouseMove={handleMouseMove}\n                onMouseOut={handleMouseOut}\n            ></canvas>\n        </div>\n\n    );\n}\n\nexport default ImageCanvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}