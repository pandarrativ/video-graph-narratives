[{"/home/yhx/Projects/Ann/Frontend/src/index.js":"1","/home/yhx/Projects/Ann/Frontend/src/reportWebVitals.js":"2","/home/yhx/Projects/Ann/Frontend/src/App.js":"3","/home/yhx/Projects/Ann/Frontend/src/components/ChatBox.js":"4","/home/yhx/Projects/Ann/Frontend/src/utils/router.js":"5","/home/yhx/Projects/Ann/Frontend/src/components/MoviePanel.js":"6","/home/yhx/Projects/Ann/Frontend/src/components/ImageCanvas.js":"7","/home/yhx/Projects/Ann/Frontend/src/components/VideoPlayer.js":"8","/home/yhx/Projects/Ann/Frontend/src/utils/utils.js":"9","/home/yhx/Projects/Ann/Frontend/src/components/SceneBox.js":"10","/home/yhx/Projects/Ann/Frontend/src/utils/scenePositions.js":"11"},{"size":535,"mtime":1700938546147,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1700938546147,"results":"14","hashOfConfig":"13"},{"size":8921,"mtime":1704832801414,"results":"15","hashOfConfig":"13"},{"size":2908,"mtime":1703094274244,"results":"16","hashOfConfig":"13"},{"size":336,"mtime":1703099891625,"results":"17","hashOfConfig":"13"},{"size":4623,"mtime":1704833008329,"results":"18","hashOfConfig":"13"},{"size":6565,"mtime":1704832900878,"results":"19","hashOfConfig":"13"},{"size":10763,"mtime":1704750120970,"results":"20","hashOfConfig":"13"},{"size":1342,"mtime":1704760374160,"results":"21","hashOfConfig":"13"},{"size":1256,"mtime":1704833037225,"results":"22","hashOfConfig":"13"},{"size":377,"mtime":1704827332204,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"5xt785",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yhx/Projects/Ann/Frontend/src/index.js",[],[],["59","60","61","62","63","64"],"/home/yhx/Projects/Ann/Frontend/src/reportWebVitals.js",[],[],"/home/yhx/Projects/Ann/Frontend/src/App.js",["65","66"],[],"/home/yhx/Projects/Ann/Frontend/src/components/ChatBox.js",["67"],[],"// components/ChatBox.js\nimport React, { useRef, useState, useEffect } from 'react';\nimport \"../assets/css/ChatBox.css\";\n// import axios from \"axios\";\n// import { widgetHelperRouter } from '../config/routeConfig';\nimport SenderIcon from \"../assets/icon/icon_message_send.svg\";\nimport axios from 'axios';\nimport { chatRouter } from '../utils/router';\n\nconst ChatBox = (props) => {\n    const [messages, setMessages] = useState([]);\n    const [msg, setMsg] = useState(\"\");\n\n    // send msg to gpt after user input\n    const sendToGPT = () => {\n      // setMessages([...messages, {role:\"assistant\", content:\"It is a alpaca with its head looking to the right.\"}])\n      // console.log(JSON.parse(localStorage.getItem(\"ann-boxes\")));\n      console.log(messages)\n      let image = props.captureScreenshot();\n\n      axios.post(chatRouter, {\n        boxes:JSON.parse(localStorage.getItem(\"ann-boxes\")),\n        messages:messages,\n        image:image,\n      })\n      .then((resp) => {\n        console.log(resp);\n        setMessages([...messages, {role:\"assistant\", content:resp.data.resp.content}])\n      })\n      .catch((e) => {\n        console.log(e);\n      })\n    }\n    // button click\n    const sendMessage = (e) => {\n        e.preventDefault();\n        setMessages([...messages, {role:\"user\", content:msg}])\n        setMsg(\"\");\n    }\n\n    const handleMsgChange = (e) => {\n        setMsg(e.target.value);\n    }\n\n    useEffect(() => {\n      if(messages[messages.length-1] && messages[messages.length-1].role === \"user\"){\n        sendToGPT();\n      }\n    }, [messages, sendToGPT])\n\n\n\n      // scroll to bottom\n    const messagesEndRef = useRef();\n      useEffect(() => {\n          // scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n          messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n  return (\n    <div className=\"helper-conversation\">\n      <div className='helper-conversation-header'>\n          Conversation\n      </div>\n\n      <div className='helper-conversation-body'>\n\n\n          {messages.map((item, i) => {\n              return (\n                  <div className={`helper-conversation-message-box helper-conversation-message-me-${item.role === \"user\"}`} key={i}>\n                      <div>\n                          {item.content}\n                      </div>\n                  </div>\n\n                  );\n              })}\n                  \n              <div ref={messagesEndRef} />\n      </div>\n\n      <form className='helper-conversation-bottom' onSubmit={sendMessage}>\n          <input className='helper-conversation-message-input' placeholder='Type your message' type='text' onChange={handleMsgChange} value={msg}></input>\n          <button type='submit' className=\"helper-conversation-btn\">\n                  <img src={SenderIcon} alt=\"icon for sending message\"></img>\n          </button>\n      </form>\n  </div>\n  );\n};\n\nexport default ChatBox;\n","/home/yhx/Projects/Ann/Frontend/src/utils/router.js",[],[],"/home/yhx/Projects/Ann/Frontend/src/components/MoviePanel.js",["68","69"],[],"/home/yhx/Projects/Ann/Frontend/src/components/ImageCanvas.js",["70"],[],"/home/yhx/Projects/Ann/Frontend/src/components/VideoPlayer.js",["71"],[],"/home/yhx/Projects/Ann/Frontend/src/utils/utils.js",[],[],"/home/yhx/Projects/Ann/Frontend/src/components/SceneBox.js",["72","73"],[],"/home/yhx/Projects/Ann/Frontend/src/utils/scenePositions.js",[],[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":27,"column":10,"nodeType":"88","messageId":"89","endLine":27,"endColumn":18},{"ruleId":"86","severity":1,"message":"90","line":27,"column":20,"nodeType":"88","messageId":"89","endLine":27,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":15,"column":11,"nodeType":"93","endLine":33,"endColumn":6},{"ruleId":"86","severity":1,"message":"94","line":12,"column":8,"nodeType":"88","messageId":"89","endLine":12,"endColumn":20},{"ruleId":"86","severity":1,"message":"95","line":55,"column":12,"nodeType":"88","messageId":"89","endLine":55,"endColumn":23},{"ruleId":"86","severity":1,"message":"96","line":9,"column":12,"nodeType":"88","messageId":"89","endLine":9,"endColumn":18},{"ruleId":"86","severity":1,"message":"97","line":1,"column":25,"nodeType":"88","messageId":"89","endLine":1,"endColumn":34},{"ruleId":"86","severity":1,"message":"97","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"98","line":7,"column":22,"nodeType":"88","messageId":"89","endLine":7,"endColumn":33},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["99"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'imageSrc' is assigned a value but never used.","Identifier","unusedVar","'setImageSrc' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'sendToGPT' function makes the dependencies of useEffect Hook (at line 49) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'sendToGPT' in its own useCallback() Hook.","VariableDeclarator","'IconStartCon' is defined but never used.","'uploadImage' is defined but never used.","'canvas' is assigned a value but never used.","'useEffect' is defined but never used.","'setPosition' is assigned a value but never used.","no-object-constructor"]