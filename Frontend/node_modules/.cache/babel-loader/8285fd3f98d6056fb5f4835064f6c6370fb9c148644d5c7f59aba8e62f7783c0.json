{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/AnnVideo/Frontend/src/components/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, forwardRef } from 'react';\nimport ReactPlayer from 'react-player';\nimport Slider from '@mui/material/Slider';\nimport { Button } from '@mui/material';\nimport \"../assets/css/video.css\";\nimport IconStop from \"../assets/icon/stop.svg\";\nimport IconContinue from \"../assets/icon/continue.svg\";\nimport myVide from '../assets/sample_video.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(() => {\n  _s();\n  const [duration, setDuration] = useState(0);\n  const [played, setPlayed] = useState(0);\n  const playerRef = useRef(null);\n  const [playing, setPlaying] = useState(false);\n\n  // load total length of vidoe\n  const handleDuration = duration => {\n    setDuration(duration);\n    console.log(duration);\n  };\n\n  // load current played seconds\n  const handleOnProgress = data => {\n    console.log(data);\n    setPlayed(data.playedSeconds);\n  };\n\n  // move video on slider bar change\n  const handleSliderChange = (event, newValue) => {\n    setPlayed(newValue);\n    if (playerRef.current) {\n      playerRef.current.seekTo(newValue);\n    }\n  };\n  // stop/play\n  const togglePlayPause = () => {\n    setPlaying(!playing);\n  };\n\n  //get screenshot\n  const captureScreenshot = () => {\n    if (playerRef.current) {\n      // Try to access the video element directly\n      const videoElement = playerRef.current.getInternalPlayer('player');\n\n      // Make sure it's a video element\n      if (videoElement && videoElement.tagName === 'VIDEO') {\n        const canvas = document.createElement('canvas');\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n        const image = canvas.toDataURL('../assets/img');\n        // downloadImage(image, 'screenshot.png');\n      } else {\n        console.error('Unable to access video element');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n      ref: playerRef,\n      url: myVide,\n      onDuration: handleDuration,\n      onProgress: handleOnProgress,\n      playing: playing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), props.showCanvas ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player-menu\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: togglePlayPause,\n        children: playing ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: IconStop,\n          alt: \"btn stop icon\",\n          className: \"icon-stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: IconContinue,\n          alt: \"btn stop continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        defaultValue: 0,\n        max: duration,\n        \"aria-label\": \"Default\",\n        value: played,\n        onChange: handleSliderChange,\n        valueLabelDisplay: \"auto\"\n        // onClick={seekToTime(10)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}, \"6+AQZmF8+bvDfVUYTXOLEpmCxSI=\")), \"6+AQZmF8+bvDfVUYTXOLEpmCxSI=\");\n_c2 = VideoPlayer;\nexport default VideoPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoPlayer$forwardRef\");\n$RefreshReg$(_c2, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useRef","forwardRef","ReactPlayer","Slider","Button","IconStop","IconContinue","myVide","jsxDEV","_jsxDEV","VideoPlayer","_s","_c","duration","setDuration","played","setPlayed","playerRef","playing","setPlaying","handleDuration","console","log","handleOnProgress","data","playedSeconds","handleSliderChange","event","newValue","current","seekTo","togglePlayPause","captureScreenshot","videoElement","getInternalPlayer","tagName","canvas","document","createElement","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","image","toDataURL","error","className","children","ref","url","onDuration","onProgress","fileName","_jsxFileName","lineNumber","columnNumber","props","showCanvas","variant","onClick","src","alt","defaultValue","max","value","onChange","valueLabelDisplay","_c2","$RefreshReg$"],"sources":["/home/yhx/Projects/AnnVideo/Frontend/src/components/VideoPlayer.js"],"sourcesContent":["import React,{useState, useRef, forwardRef} from 'react';\nimport ReactPlayer from 'react-player'\nimport Slider from '@mui/material/Slider';\nimport { Button } from '@mui/material';\nimport \"../assets/css/video.css\";\nimport IconStop from \"../assets/icon/stop.svg\";\nimport IconContinue from \"../assets/icon/continue.svg\";\n\nimport myVide from '../assets/sample_video.mp4' \n\nconst VideoPlayer= forwardRef(() => {\n    const [duration, setDuration] = useState(0);\n    const [played, setPlayed] = useState(0);\n    const playerRef = useRef(null);\n    const [playing, setPlaying] = useState(false);\n\n    // load total length of vidoe\n    const handleDuration = (duration) => {\n      setDuration(duration);\n      console.log(duration)\n    };  \n\n    // load current played seconds\n    const handleOnProgress = (data) => {\n        console.log(data)\n        setPlayed(data.playedSeconds)\n    }\n\n    // move video on slider bar change\n    const handleSliderChange = (event, newValue) => {\n        setPlayed(newValue);\n        if (playerRef.current) {\n            playerRef.current.seekTo(newValue);\n        }\n    };\n    // stop/play\n    const togglePlayPause = () => {\n        setPlaying(!playing);\n    };\n\n    //get screenshot\n    const captureScreenshot = () => {\n        if (playerRef.current) {\n            // Try to access the video element directly\n            const videoElement = playerRef.current.getInternalPlayer('player');\n    \n            // Make sure it's a video element\n            if (videoElement && videoElement.tagName === 'VIDEO') {\n                const canvas = document.createElement('canvas');\n                canvas.width = videoElement.videoWidth;\n                canvas.height = videoElement.videoHeight;\n    \n                const ctx = canvas.getContext('2d');\n                ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n    \n                const image = canvas.toDataURL('../assets/img');\n                // downloadImage(image, 'screenshot.png');\n            } else {\n                console.error('Unable to access video element');\n            }\n        }\n    };\n    \n\n\n    return (\n        <div className='video-player'>\n            <ReactPlayer \n                ref={playerRef}\n                url={myVide}\n                onDuration={handleDuration}\n                onProgress={handleOnProgress}\n                playing={playing}\n            />\n            {\n                props.showCanvas ?  \"\" :       \n                <div className='video-player-menu'>\n                    <Button variant=\"contained\"  onClick={togglePlayPause}>\n                        {\n                            playing ?                     \n                            <img src={IconStop} alt=\"btn stop icon\" className='icon-stop'></img>\n                            :\n                            <img src={IconContinue} alt=\"btn stop continue\"></img>\n                        }\n\n                    </Button>\n                    {/* <Button variant=\"contained\" onClick={captureScreenshot}>screen shot</Button> */}\n                    <Slider \n                        defaultValue={0} \n                        max={duration} \n                        aria-label=\"Default\" \n                        value={played} \n                        onChange={handleSliderChange}\n                        valueLabelDisplay=\"auto\"\n                        // onClick={seekToTime(10)}\n                    />\n                </div>\n            }\n\n        </div>\n        \n    );\n})\n\nexport default VideoPlayer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}