{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/Ann/Frontend/src/components/ImageCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, forwardRef, useImperativeHandle } from 'react';\nimport \"../assets/css/canvas.css\";\nimport { boxColors } from '../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCanvas = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  const [color, setColor] = useState(boxColors[0]);\n  const [canvas, setCanvas] = useState();\n  const [ctx, setCtx] = useState();\n  // const [canvasBox, setCanvasBox] = useState();\n  const [ctxBox, setCtxBox] = useState();\n  // calculate the x-y of the canvas\n  const [offsetX, setOffsetX] = useState();\n  const [offsetY, setOffsetY] = useState();\n  const canvasRef = useRef();\n  const canvasBoxRef = useRef();\n  useEffect(() => {\n    const imageCanvas = canvasRef.current;\n    setCanvas(imageCanvas);\n    setCtx(imageCanvas.getContext(\"2d\"));\n    const rect = canvasRef.current.getBoundingClientRect();\n    setOffsetX(rect.left);\n    setOffsetY(rect.top);\n    setCtxBox(canvasBoxRef.current.getContext(\"2d\"));\n  }, []);\n\n  // change offsetX and y when changing scrolls up and down in a page\n  useEffect(() => {\n    function handleScroll() {\n      const rect = canvasRef.current.getBoundingClientRect();\n      setOffsetX(rect.left);\n      setOffsetY(rect.top);\n    }\n\n    // Attach the event listener to the window object\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // Change box colors and ids\n  useEffect(() => {\n    let n = boxColors.length;\n    let colorIndex = boxes.length % n;\n    setColor(boxColors[colorIndex]);\n    localStorage.setItem(\"ann-boxes\", JSON.stringify(boxes));\n  }, [boxes]);\n\n  // clean all the box\n  useImperativeHandle(ref, () => ({\n    cleanBoxes() {\n      setBoxes([]);\n      ctxBox.clearRect(0, 0, canvasBoxRef.current.width, canvasBoxRef.current.height);\n    },\n    setBoxes(data) {\n      console.log(canvasBoxRef.current.width);\n      console.log(canvasBoxRef.current.height);\n      setBoxes([]);\n      let newboxes = [];\n      ctxBox.lineWidth = 5;\n      for (let i = 0; i < data.length; i++) {\n        ctxBox.strokeStyle = boxColors[i % boxColors.length];\n        ctxBox.strokeRect(data[i].box[0], data[i].box[1], data[i].box[2], data[i].box[3]);\n        newboxes.push({\n          \"id\": i,\n          'name': `<region ${i}>`,\n          'color': color,\n          \"box\": [data[i].box[0], data[i].box[1], data[i].box[2], data[i].box[3]]\n        });\n        console.log(data[i].box);\n      }\n      setBoxes(newboxes);\n      // ctxBox.clearRect(0, 0, canvasBoxRef.current.width, canvasBoxRef.current.height);\n    },\n\n    addBox(x1, y1, wid, hei) {\n      console.log(x1, y1, wid, heigion);\n      const index = boxes.length;\n      ctxBox.lineWidth = 5;\n      ctxBox.strokeStyle = boxColors[index % boxColors.length];\n      ctxBox.strokeRect(x1, y1, wid, hei);\n      setBoxes([...boxes, {\n        \"id\": index,\n        'name': `<region ${index}>`,\n        'color': color,\n        \"box\": [x1, y1, wid, hei]\n      }]);\n    }\n  }));\n\n  ///////////////////// for drawing one box ////////////////////////////\n  //  flag: where user is dragging the box\n  const [isDown, setIsDown] = useState(false);\n  const [startX, setStartX] = useState();\n  const [startY, setStartY] = useState();\n  const [prevStartX, setPrevStartX] = useState(0);\n  const [prevStartY, setPrevStartY] = useState(0);\n  const [prevWidth, setPrevWidth] = useState(0);\n  const [prevHeight, setPrevHeight] = useState(0);\n  const handleMouseUp = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // the drag is over, clear the dragging flag, remove the box in the canvas panel and draw it on canvasBox panel\n    setIsDown(false);\n    ctxBox.strokeStyle = color;\n    ctxBox.lineWidth = 5;\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctxBox.strokeRect(prevStartX, prevStartY, prevWidth, prevHeight);\n    setBoxes([...boxes, {\n      \"id\": boxes.length,\n      'name': `<region ${boxes.length}>`,\n      'color': color,\n      \"box\": [prevStartX, prevStartY, prevWidth, prevHeight]\n    }]);\n  };\n  const handleMouseDown = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    ctx.strokeStyle = color;\n    setStartX(parseInt(e.clientX - offsetX));\n    setStartY(parseInt(e.clientY - offsetY));\n    setIsDown(true);\n    // console.log(\"start   x:\" + parseInt(e.clientX - offsetX + window.scrollX) + \"    y:\" + parseInt(e.clientY - offsetY + window.scrollY));\n    // console.log(\"e.clientY: \" + e.clientY + \"     offsetY:\" + offsetY + \"     window.scrollY:\" + window.scrollY)\n  };\n\n  const handleMouseMove = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isDown) {\n      return;\n    }\n    let mouseX = parseInt(e.clientX - offsetX);\n    let mouseY = parseInt(e.clientY - offsetY);\n    var width = mouseX - startX;\n    var height = mouseY - startY;\n    ctx.lineWidth = 5;\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.strokeRect(startX, startY, width, height);\n    setPrevStartX(startX);\n    setPrevStartY(startY);\n    setPrevWidth(width);\n    setPrevHeight(height);\n  };\n  const handleMouseOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // the drag is over, clear the dragging flag\n    setIsDown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvaxBox\",\n      ref: canvasBoxRef,\n      height: 360,\n      width: 640\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"imageCanvas\",\n      height: 360,\n      width: 640,\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseMove: handleMouseMove,\n      onMouseOut: handleMouseOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n}, \"tqsIMyYWxp20TZnq+u9IoJJ1+/E=\")), \"tqsIMyYWxp20TZnq+u9IoJJ1+/E=\");\n_c2 = ImageCanvas;\nexport default ImageCanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageCanvas$forwardRef\");\n$RefreshReg$(_c2, \"ImageCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","forwardRef","useImperativeHandle","boxColors","jsxDEV","_jsxDEV","ImageCanvas","_s","_c","props","ref","boxes","setBoxes","color","setColor","canvas","setCanvas","ctx","setCtx","ctxBox","setCtxBox","offsetX","setOffsetX","offsetY","setOffsetY","canvasRef","canvasBoxRef","imageCanvas","current","getContext","rect","getBoundingClientRect","left","top","handleScroll","window","addEventListener","removeEventListener","n","length","colorIndex","localStorage","setItem","JSON","stringify","cleanBoxes","clearRect","width","height","data","console","log","newboxes","lineWidth","i","strokeStyle","strokeRect","box","push","addBox","x1","y1","wid","hei","heigion","index","isDown","setIsDown","startX","setStartX","startY","setStartY","prevStartX","setPrevStartX","prevStartY","setPrevStartY","prevWidth","setPrevWidth","prevHeight","setPrevHeight","handleMouseUp","e","preventDefault","stopPropagation","handleMouseDown","parseInt","clientX","clientY","handleMouseMove","mouseX","mouseY","handleMouseOut","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseUp","onMouseMove","onMouseOut","_c2","$RefreshReg$"],"sources":["/home/yhx/Projects/Ann/Frontend/src/components/ImageCanvas.js"],"sourcesContent":["import React,{useRef, useEffect, useState, forwardRef, useImperativeHandle} from 'react';\nimport \"../assets/css/canvas.css\";\nimport { boxColors } from '../utils/utils';\n\nconst ImageCanvas = forwardRef( (props, ref) => {\n    const [boxes, setBoxes] = useState([]);\n    const [color, setColor] = useState(boxColors[0]);\n\n    const [canvas, setCanvas] = useState();\n    const [ctx, setCtx] = useState();\n    // const [canvasBox, setCanvasBox] = useState();\n    const [ctxBox, setCtxBox] = useState();\n    // calculate the x-y of the canvas\n    const [offsetX, setOffsetX] = useState();\n    const [offsetY, setOffsetY] = useState();\n\n    const canvasRef = useRef();\n    const canvasBoxRef = useRef();\n    useEffect(() => {\n        const imageCanvas = canvasRef.current;\n        setCanvas(imageCanvas);\n        setCtx(imageCanvas.getContext(\"2d\"));\n        const rect = canvasRef.current.getBoundingClientRect();\n        setOffsetX(rect.left);\n        setOffsetY(rect.top)\n        setCtxBox(canvasBoxRef.current.getContext(\"2d\"));\n    },[])\n\n    // change offsetX and y when changing scrolls up and down in a page\n    useEffect(() => {\n        function handleScroll() {\n            const rect = canvasRef.current.getBoundingClientRect();\n            setOffsetX(rect.left);\n            setOffsetY(rect.top)\n        }\n    \n        // Attach the event listener to the window object\n        window.addEventListener('scroll', handleScroll);\n    \n        // Clean up the event listener when the component unmounts\n        return () => {\n          window.removeEventListener('scroll', handleScroll);\n        };\n      }, []);\n\n\n    // Change box colors and ids\n    useEffect(() => {\n        let n = boxColors.length;\n        let colorIndex = boxes.length %n; \n        setColor(boxColors[colorIndex])\n        localStorage.setItem(\"ann-boxes\", JSON.stringify(boxes))\n    }, [boxes])\n\n    // clean all the box\n    useImperativeHandle(ref, () => ({ \n        cleanBoxes (){\n            setBoxes([]);\n            ctxBox.clearRect(0, 0, canvasBoxRef.current.width, canvasBoxRef.current.height);\n        },\n        setBoxes (data){\n            console.log(canvasBoxRef.current.width);\n            console.log(canvasBoxRef.current.height);\n            setBoxes([]);\n            let newboxes = [];\n            ctxBox.lineWidth = 5;\n            for(let i=0; i<data.length; i++){\n                ctxBox.strokeStyle = boxColors[i%boxColors.length];\n                ctxBox.strokeRect(data[i].box[0], data[i].box[1], data[i].box[2], data[i].box[3]);\n                newboxes.push({\n                    \"id\":i,\n                    'name':`<region ${i}>`,\n                    'color':color,\n                    \"box\":[data[i].box[0], data[i].box[1], data[i].box[2], data[i].box[3]]\n                })\n                console.log(data[i].box);\n            }\n            setBoxes(newboxes);\n            // ctxBox.clearRect(0, 0, canvasBoxRef.current.width, canvasBoxRef.current.height);\n        },\n        addBox (x1, y1, wid, hei){\n            console.log(x1, y1, wid, heigion);\n            const index = boxes.length;\n\n            ctxBox.lineWidth = 5;\n            ctxBox.strokeStyle = boxColors[index%boxColors.length];\n            ctxBox.strokeRect(x1, y1, wid, hei);\n            setBoxes([...boxes, {\n                \"id\":index,\n                'name':`<region ${index}>`,\n                'color':color,\n                \"box\":[x1, y1, wid, hei]\n            }])\n        }\n     }));\n\n\n\n\n\n    ///////////////////// for drawing one box ////////////////////////////\n    //  flag: where user is dragging the box\n    const [isDown, setIsDown] = useState(false);\n    const [startX, setStartX] = useState();\n    const [startY, setStartY] = useState();\n\n    const [prevStartX, setPrevStartX] = useState(0);\n    const [prevStartY, setPrevStartY] = useState(0);\n\n    const [prevWidth, setPrevWidth] = useState(0);\n    const [prevHeight, setPrevHeight] = useState(0);    \n\n\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // the drag is over, clear the dragging flag, remove the box in the canvas panel and draw it on canvasBox panel\n        setIsDown(false);\n        ctxBox.strokeStyle = color;\n        ctxBox.lineWidth = 5;\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctxBox.strokeRect(prevStartX, prevStartY, prevWidth, prevHeight);\n        setBoxes([...boxes, {\n            \"id\":boxes.length,\n            'name':`<region ${boxes.length}>`,\n            'color':color,\n            \"box\":[prevStartX, prevStartY, prevWidth, prevHeight]\n        }])\n    }\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        \n        ctx.strokeStyle=color;\n        setStartX(parseInt(e.clientX - offsetX ));\n        setStartY(parseInt(e.clientY - offsetY ));\n    \n        setIsDown(true);\n        // console.log(\"start   x:\" + parseInt(e.clientX - offsetX + window.scrollX) + \"    y:\" + parseInt(e.clientY - offsetY + window.scrollY));\n        // console.log(\"e.clientY: \" + e.clientY + \"     offsetY:\" + offsetY + \"     window.scrollY:\" + window.scrollY)\n    };\n    \n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        if (!isDown) {\n            return;\n        }\n\n        let mouseX = parseInt(e.clientX - offsetX );\n        let mouseY = parseInt(e.clientY - offsetY );\n    \n        var width = mouseX - startX;\n        var height = mouseY - startY;\n        \n        ctx.lineWidth = 5;\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.strokeRect(startX, startY, width, height);\n    \n        setPrevStartX(startX);\n        setPrevStartY(startY);\n        setPrevWidth(width);\n        setPrevHeight(height);\n    };\n\n    const handleMouseOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // the drag is over, clear the dragging flag\n        setIsDown(false);\n    }\n\n\n    return (\n        <div id='canvas-wrapper'>\n            <canvas id=\"canvaxBox\" ref={canvasBoxRef} height={360} width={640}></canvas>\n            <canvas \n                id=\"imageCanvas\"\n                height={360} width={640}\n                ref={canvasRef} \n                onMouseDown={handleMouseDown} \n                onMouseUp={handleMouseUp}\n                onMouseMove={handleMouseMove}\n                onMouseOut={handleMouseOut}\n            ></canvas>\n            \n        </div>\n\n    );\n});\n\nexport default ImageCanvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}