{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/AnnVideo/Frontend/src/components/MoviePanel.js\",\n  _s = $RefreshSig$();\n// components/MoviePanel.js\n\nimport React, { useRef, useState, forwardRef, useImperativeHandle } from 'react';\nimport ImageCanvas from './ImageCanvas';\nimport VideoPlayer from './VideoPlayer';\nimport axios from \"axios\";\nimport { imageUploadRouter } from '../router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviePanel = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  // Placeholder content for the MoviePanel\n  const imageCanvasRef = useRef();\n  const videoRef = useRef();\n  const callCleanBox = () => {\n    if (imageCanvasRef.current) {\n      imageCanvasRef.current.cleanBoxes();\n    }\n  };\n  useImperativeHandle(ref, () => {\n    return {\n      pauseVideo() {\n        videoRef.current.pauseVideo();\n      },\n      captureScreenshot() {\n        videoRef.current.captureScreenshot();\n      }\n    };\n  }, []);\n  function uploadImage() {\n    // console.log(videoRef.current.captureScreenshot())\n\n    axios.post(imageUploadRouter, {\n      image: videoRef.current.captureScreenshot(),\n      filename: \"test.png\"\n    }).then(resp => {\n      console.log(resp);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-panel-container\",\n    children: [/*#__PURE__*/_jsxDEV(VideoPlayer, {\n      showCanvas: props.showCanvas,\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), props.showCanvas ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-btn-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clean-box-button\",\n          onClick: callCleanBox,\n          children: \"Clean Boxes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clean-box-button\",\n          onClick: uploadImage,\n          children: \"Start Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clean-box-button\",\n          onClick: props.toggleShowCanvas,\n          children: \"Continue Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageCanvas, {\n        ref: imageCanvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}, \"Tm26sBvglN3kbZHii1Rh0jQu948=\")), \"Tm26sBvglN3kbZHii1Rh0jQu948=\");\n_c2 = MoviePanel;\nexport default MoviePanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"MoviePanel$forwardRef\");\n$RefreshReg$(_c2, \"MoviePanel\");","map":{"version":3,"names":["React","useRef","useState","forwardRef","useImperativeHandle","ImageCanvas","VideoPlayer","axios","imageUploadRouter","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviePanel","_s","_c","props","ref","imageCanvasRef","videoRef","callCleanBox","current","cleanBoxes","pauseVideo","captureScreenshot","uploadImage","post","image","filename","then","resp","console","log","catch","e","className","children","showCanvas","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toggleShowCanvas","_c2","$RefreshReg$"],"sources":["/home/yhx/Projects/AnnVideo/Frontend/src/components/MoviePanel.js"],"sourcesContent":["// components/MoviePanel.js\n\nimport React,{useRef, useState, forwardRef, useImperativeHandle} from 'react';\nimport ImageCanvas from './ImageCanvas';\nimport VideoPlayer from './VideoPlayer';\nimport axios from \"axios\";\nimport { imageUploadRouter } from '../router';\n\n\nconst MoviePanel = forwardRef( (props, ref) => {\n  // Placeholder content for the MoviePanel\n  const imageCanvasRef = useRef();\n  const videoRef = useRef();\n  const callCleanBox = () => {\n    if(imageCanvasRef.current){\n      imageCanvasRef.current.cleanBoxes();\n    }\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      pauseVideo(){\n        videoRef.current.pauseVideo();\n      },\n      captureScreenshot(){\n        videoRef.current.captureScreenshot();\n      },\n    }\n  }, [])\n\n\n  function uploadImage(){\n    // console.log(videoRef.current.captureScreenshot())\n\n    axios.post(imageUploadRouter, {\n      image:videoRef.current.captureScreenshot(),\n      filename:\"test.png\",\n    })\n    .then((resp) => {\n      console.log(resp);\n    })\n    .catch((e) => {\n      console.log(e);\n    })\n  }\n\n  return (\n    <div className=\"movie-panel-container\">\n      {/* <h2>Video Panel</h2> */}\n      <VideoPlayer showCanvas={props.showCanvas} ref={videoRef}></VideoPlayer>\n\n      {\n        props.showCanvas ? \n        (\n          <>          \n            <div className='movie-btn-list'>\n              <button className='clean-box-button' onClick={callCleanBox}>Clean Boxes</button> \n              <button className='clean-box-button' onClick={uploadImage}>Start Conversation</button> \n              <button className='clean-box-button' onClick={props.toggleShowCanvas}>Continue Video</button> \n            </div>\n            <ImageCanvas ref={imageCanvasRef}></ImageCanvas>\n          </>\n\n        ):\n        \"\"\n\n      }\n\n    \n      \n    </div>\n  );\n});\n\nexport default MoviePanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}