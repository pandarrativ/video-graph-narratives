{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/Ann/Frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport \"./assets/css/graphPanel.css\";\nimport axios from 'axios';\nimport { sceneGraphRouter, videoUploadRouter } from './utils/router';\nimport ChatBox from './components/ChatBox';\nimport MoviePanel from './components/MoviePanel';\nimport GraphPanel from './components/GraphPanel';\nimport videoIcon from \"./assets/icon/video.svg\";\nimport chatIcon from \"./assets/icon/chat.svg\";\nimport uploadIcon from \"./assets/icon/upload.svg\";\nimport BoxCut from \"./assets/icon/cut-box.svg\";\nimport BackPosition from \"./assets/icon/position.svg\";\nimport Xarrow, { Xwrapper } from 'react-xarrows';\nimport SceneBox from './components/SceneBox';\nimport { scenePositions } from './utils/scenePositions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const moviePanelRef = useRef();\n  const [videoURL, setVideoURL] = useState();\n  const [imageSrc, setImageSrc] = useState('');\n  const handleOnVideoUpload = e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    setVideoURL(URL.createObjectURL(file));\n    console.log(URL.createObjectURL(file));\n    axios.post(videoUploadRouter, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(resp => {\n      console.log(resp);\n    }).catch(e => console.log(e));\n  };\n  const captureScreenshot = () => {\n    if (moviePanelRef.current) {\n      return moviePanelRef.current.captureScreenshot();\n    }\n  };\n\n  ////////////////////////////  scene Graph  ////////////////////////////////\n  const [sceneGraphData, setSceneGraphData] = useState();\n  // const [objectList, setObjectList] = useState([]);\n  const [usedPositions, setUsedPositions] = useState(new Map());\n  const [resetKey, setResetKey] = useState(0);\n  const sceneGraph = e => {\n    e.preventDefault();\n    axios.post(sceneGraphRouter, {\n      image: captureScreenshot()\n    }).then(resp => {\n      let respData = JSON.parse(resp.data.data);\n      // check if length exceeds\n      if (respData.objects.length > scenePositions.length) {\n        alert(\"Too Many objects detected!\");\n        return;\n      }\n      let newObjectPositions = new Map();\n      let positionSet = new Set();\n\n      // first round, set position and colors\n      for (let i = 0; i < respData.objects.length; i++) {\n        const theName = respData.objects[i].name;\n        if (usedPositions.has(theName)) {\n          respData.objects[i].color = \"white\";\n          let originalPosition = usedPositions.get(theName);\n          newObjectPositions.set(theName, originalPosition);\n          respData.objects[i].position = originalPosition;\n          positionSet.add(originalPosition);\n        } else {\n          respData.objects[i].color = \"yellow\";\n        }\n        // newObjectList.push(respData.objects[i].name);\n      }\n      // second round, allocate positions to new objects \n      for (let i = 0; i < respData.objects.length; i++) {\n        const theName = respData.objects[i].name;\n        if (!newObjectPositions.has(theName)) {\n          // get the first available position\n          for (let i = 0; i < scenePositions.length; i++) {\n            if (!positionSet.has(i)) {\n              positionSet.add(i);\n              newObjectPositions.set(theName, i);\n              respData.objects[i].position = i;\n              break;\n            }\n          }\n        }\n      }\n      console.log(respData);\n      console.log(newObjectPositions);\n      setSceneGraphData(respData);\n      setUsedPositions(newObjectPositions);\n\n      // setObjectList(newObjectList);\n    }).catch(e => {\n      console.log(e);\n      alert(e.response.data);\n    });\n  };\n\n  // used for auto sceneGraph\n  // const triggerSceneGraph = () => {\n  //   axios.post(sceneGraphRouter, {\n  //     image:captureScreenshot(),\n  //   })\n  //   .then((resp) => {\n  //     let respData = JSON.parse(resp.data.data);\n  //     let newObjectList = [];\n  //     console.log(respData);\n  //     for(let i=0; i<respData.objects.length; i++){\n  //       console.log(respData.objects[i].name);\n  //       if(objectList.includes(respData.objects[i].name)){\n  //         respData.objects[i].color = \"white\";\n  //       }else{\n  //         respData.objects[i].color = \"yellow\";\n  //       }\n  //       newObjectList.push(respData.objects[i].name);\n  //     }\n\n  //     console.log(respData);\n  //     console.log(objectList);\n  //     setSceneGraphData(respData)\n  //     setObjectList(newObjectList);\n\n  //     // setImageSrc(`data:image/png;base64,${resp.data.image}`);\n  //   })\n  //   .catch((e) => {\n  //     console.log(e);\n  //   })\n  // }\n\n  // back position\n  const moveToOriginalPosition = e => {\n    e.preventDefault();\n    setResetKey(1 + resetKey);\n    let newSceneGraphData = JSON.parse(JSON.stringify(sceneGraphData)); // had to create a new one, not the same one because the obeject refers to the same memeory id\n\n    for (let i = 0; i < newSceneGraphData.objects.length; i++) {\n      const theName = newSceneGraphData.objects[i].name;\n      newSceneGraphData.objects[i].position = usedPositions.get(theName);\n    }\n    // for(let i=0; i<newSceneGraphData.)\n    console.log(newSceneGraphData);\n    console.log(scenePositions);\n    setSceneGraphData(newSceneGraphData);\n  };\n  const renderSceneGraph = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-panel-container\",\n      children: /*#__PURE__*/_jsxDEV(Xwrapper, {\n        children: [sceneGraphData && sceneGraphData.objects.map((item, i) => {\n          // console.log(item);\n          console.log(\"x:\" + scenePositions[item.position][0] + \"   y:\" + scenePositions[item.position][1]);\n          return /*#__PURE__*/_jsxDEV(SceneBox, {\n            id: item.id.toString(),\n            name: item.name.toString(),\n            x: scenePositions[item.position][0],\n            y: scenePositions[item.position][1],\n            color: item.color\n          }, `box-${i}-${resetKey}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 26\n          }, this);\n        }), sceneGraphData && sceneGraphData.relationships.map((item, i) => {\n          // console.log(i);\n          return /*#__PURE__*/_jsxDEV(Xarrow, {\n            labels: item.predicate,\n            start: item.subject.toString(),\n            end: item.object.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 26\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Natural Language Information Retrieval from Domain-Specific Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-panel\",\n      children: videoURL && /*#__PURE__*/_jsxDEV(MoviePanel, {\n        ref: moviePanelRef,\n        videoURL: videoURL,\n        sceneGraph: sceneGraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-panel\",\n      children: [renderSceneGraph(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-panel-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"graph-panel-btns\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: BoxCut,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"graph-panel-btns\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: BackPosition,\n            alt: \"\",\n            onClick: moveToOriginalPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"upload-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"videoInput\",\n          accept: \"video/*\",\n          onChange: handleOnVideoUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: uploadIcon,\n            alt: \"icon for upload video button\",\n            className: \"setting-icons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"setting-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: videoIcon,\n          alt: \"icon for budding box button\",\n          className: \"setting-icons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Video History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"setting-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chatIcon,\n          alt: \"icon for instance segmentation button\",\n          className: \"setting-icons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Chat History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: /*#__PURE__*/_jsxDEV(ChatBox, {\n        captureScreenshot: captureScreenshot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9NUH13VSG3/doqFsTYUb8W9OSFQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","axios","sceneGraphRouter","videoUploadRouter","ChatBox","MoviePanel","GraphPanel","videoIcon","chatIcon","uploadIcon","BoxCut","BackPosition","Xarrow","Xwrapper","SceneBox","scenePositions","jsxDEV","_jsxDEV","App","_s","moviePanelRef","videoURL","setVideoURL","imageSrc","setImageSrc","handleOnVideoUpload","e","file","target","files","formData","FormData","append","URL","createObjectURL","console","log","post","headers","then","resp","catch","captureScreenshot","current","sceneGraphData","setSceneGraphData","usedPositions","setUsedPositions","Map","resetKey","setResetKey","sceneGraph","preventDefault","image","respData","JSON","parse","data","objects","length","alert","newObjectPositions","positionSet","Set","i","theName","name","has","color","originalPosition","get","set","position","add","response","moveToOriginalPosition","newSceneGraphData","stringify","renderSceneGraph","className","children","map","item","id","toString","x","y","fileName","_jsxFileName","lineNumber","columnNumber","relationships","labels","predicate","start","subject","end","object","ref","src","alt","onClick","type","accept","onChange","_c","$RefreshReg$"],"sources":["/home/yhx/Projects/Ann/Frontend/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport \"./assets/css/graphPanel.css\";\nimport axios from 'axios';\nimport { sceneGraphRouter, videoUploadRouter } from './utils/router';\n\nimport ChatBox from './components/ChatBox';\nimport MoviePanel from './components/MoviePanel';\nimport GraphPanel from './components/GraphPanel';\n\nimport videoIcon from \"./assets/icon/video.svg\";\nimport chatIcon from \"./assets/icon/chat.svg\";\nimport uploadIcon from \"./assets/icon/upload.svg\";\nimport BoxCut from \"./assets/icon/cut-box.svg\";\nimport BackPosition from \"./assets/icon/position.svg\";\n\n\nimport Xarrow, {Xwrapper} from 'react-xarrows';\nimport SceneBox from './components/SceneBox';\nimport { scenePositions } from './utils/scenePositions';\n\nconst App = () => {\n  const moviePanelRef = useRef();\n  const [videoURL, setVideoURL] = useState();\n  const [imageSrc, setImageSrc] = useState('');\n\n\n  const handleOnVideoUpload = (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n\n    setVideoURL(URL.createObjectURL(file));\n    console.log(URL.createObjectURL(file))\n\n    axios.post(videoUploadRouter, formData, {\n      headers: {\n          'Content-Type': 'multipart/form-data',\n      }\n    }).then((resp) => {\n    console.log(resp);\n   }).catch((e) => console.log(e));\n  \n  }\n\n  const captureScreenshot = () => {\n    if(moviePanelRef.current){\n      return moviePanelRef.current.captureScreenshot();\n    }\n  }\n\n\n\n  ////////////////////////////  scene Graph  ////////////////////////////////\n  const [sceneGraphData, setSceneGraphData] = useState();\n  // const [objectList, setObjectList] = useState([]);\n  const [usedPositions, setUsedPositions] = useState(new Map());\n  const [resetKey, setResetKey] = useState(0);  \n\n  const sceneGraph = (e) => {\n    e.preventDefault();\n    axios.post(sceneGraphRouter, {\n      image:captureScreenshot(),\n    })\n    .then((resp) => {\n      let respData = JSON.parse(resp.data.data);\n      // check if length exceeds\n      if(respData.objects.length > scenePositions.length){\n        alert(\"Too Many objects detected!\")\n        return;\n      }\n\n\n      let newObjectPositions = new Map();\n      let positionSet = new Set();\n\n      // first round, set position and colors\n      for(let i=0; i<respData.objects.length; i++){\n        const theName = respData.objects[i].name;\n        if(usedPositions.has(theName)){\n          respData.objects[i].color = \"white\";\n          \n          let originalPosition = usedPositions.get(theName);\n          newObjectPositions.set(theName, originalPosition);\n          respData.objects[i].position = originalPosition;\n          positionSet.add(originalPosition);\n        }else{\n          respData.objects[i].color = \"yellow\";\n        }\n        // newObjectList.push(respData.objects[i].name);\n      }\n      // second round, allocate positions to new objects \n      for(let i=0; i<respData.objects.length; i++){\n        const theName = respData.objects[i].name;\n        if(!newObjectPositions.has(theName)){\n          // get the first available position\n          for(let i=0; i<scenePositions.length; i++){\n            if(!positionSet.has(i)){\n              positionSet.add(i);\n              newObjectPositions.set(theName, i);\n              respData.objects[i].position = i;\n              break;\n            }\n          }\n        }\n      }\n\n\n      console.log(respData);\n      console.log(newObjectPositions);\n      setSceneGraphData(respData);\n      setUsedPositions(newObjectPositions);\n\n      // setObjectList(newObjectList);\n    })\n    .catch((e) => {\n      console.log(e);\n      alert(e.response.data);\n    })\n  }\n\n  // used for auto sceneGraph\n  // const triggerSceneGraph = () => {\n  //   axios.post(sceneGraphRouter, {\n  //     image:captureScreenshot(),\n  //   })\n  //   .then((resp) => {\n  //     let respData = JSON.parse(resp.data.data);\n  //     let newObjectList = [];\n  //     console.log(respData);\n  //     for(let i=0; i<respData.objects.length; i++){\n  //       console.log(respData.objects[i].name);\n  //       if(objectList.includes(respData.objects[i].name)){\n  //         respData.objects[i].color = \"white\";\n  //       }else{\n  //         respData.objects[i].color = \"yellow\";\n  //       }\n  //       newObjectList.push(respData.objects[i].name);\n  //     }\n\n  //     console.log(respData);\n  //     console.log(objectList);\n  //     setSceneGraphData(respData)\n  //     setObjectList(newObjectList);\n\n\n  //     // setImageSrc(`data:image/png;base64,${resp.data.image}`);\n  //   })\n  //   .catch((e) => {\n  //     console.log(e);\n  //   })\n  // }\n\n  // back position\n  const moveToOriginalPosition = (e) => {\n    e.preventDefault();\n    setResetKey(1 + resetKey);\n\n    let newSceneGraphData = JSON.parse(JSON.stringify(sceneGraphData));  // had to create a new one, not the same one because the obeject refers to the same memeory id\n\n    for(let i=0; i<newSceneGraphData.objects.length; i++){\n      const theName = newSceneGraphData.objects[i].name;\n      newSceneGraphData.objects[i].position = usedPositions.get(theName);\n    }\n    // for(let i=0; i<newSceneGraphData.)\n    console.log(newSceneGraphData);\n    console.log(scenePositions);\n    setSceneGraphData(newSceneGraphData);\n  }\n\n\n  const renderSceneGraph = () => {\n      return (\n        <div className=\"graph-panel-container\">\n          <Xwrapper>\n              {\n                sceneGraphData && sceneGraphData.objects.map( (item, i) => {\n                  // console.log(item);\n                  console.log(\"x:\" + scenePositions[item.position][0] + \"   y:\" + scenePositions[item.position][1]);\n                  return <SceneBox \n                            key={`box-${i}-${resetKey}`} \n                            id={item.id.toString()} \n                            name={item.name.toString()}\n                            x={scenePositions[item.position][0]}\n                            y={scenePositions[item.position][1]}\n                            color={item.color}\n\n                          ></SceneBox>;\n                })\n              }\n              {\n                sceneGraphData && sceneGraphData.relationships.map( (item, i) => {\n                  // console.log(i);\n                  return <Xarrow \n                    labels={item.predicate} \n                    start={item.subject.toString()} \n                    end={item.object.toString()}/>;\n                })\n              }\n              {/* {\n                scenePositions.map((item, i) => {\n                  return (\n                    <SceneBox\n                      x={item[0]}\n                      y={item[1]}\n                      name={\"asd\"}\n                      id={i}\n                    ></SceneBox>\n                  )\n                })\n              } */}\n          </Xwrapper>\n        </div>\n      );\n  }\n\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-header\">\n        <h2>Natural Language Information Retrieval from Domain-Specific Videos</h2>\n      </div>\n      <div className=\"movie-panel\">\n        {videoURL && <MoviePanel ref={moviePanelRef} videoURL={videoURL} sceneGraph={sceneGraph} />}\n        \n      </div>\n      <div className=\"graph-panel\">\n        {/* <GraphPanel imageSrc={imageSrc}/> */}\n        {renderSceneGraph()}\n        <div className='graph-panel-options'>\n          <button className='graph-panel-btns'>\n            <img src={BoxCut} alt=''></img>\n          </button>\n          <button className='graph-panel-btns'>\n            <img src={BackPosition} alt='' onClick={moveToOriginalPosition}></img>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"settings-panel\">\n        <div></div>\n        <div id=\"upload-wrapper\">\n          <input type=\"file\" id=\"videoInput\"  accept=\"video/*\"  onChange={handleOnVideoUpload}></input>  \n          <div className='setting-btn' > \n            <img src={uploadIcon} alt=\"icon for upload video button\" className='setting-icons'></img>\n            <p>Upload Video</p>\n          </div>  \n        </div>\n        <button className='setting-btn' >\n          <img src={videoIcon} alt=\"icon for budding box button\"  className='setting-icons'></img>\n          <p>Video History</p>\n        </button>\n        <button className='setting-btn'>\n          <img src={chatIcon} alt=\"icon for instance segmentation button\"  className='setting-icons'></img>\n          <p>Chat History</p>\n        </button>\n      </div>\n      <div className=\"chatbox\">\n        {/* Chatbox Panel */}\n        <ChatBox captureScreenshot={captureScreenshot}/>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}