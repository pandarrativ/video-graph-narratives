{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/AnnVideo/Frontend/src/components/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport ReactPlayer from 'react-player';\nimport \"../assets/css/video.css\";\nimport { formatTime } from '../utils/utils';\n\n//icons\nimport IconStop from \"../assets/icon/stop.svg\";\nimport IconContinue from \"../assets/icon/continue.svg\";\nimport IconSpeed from \"../assets/icon/playback speed.svg\";\nimport IconFullScreen from \"../assets/icon/full-screen.svg\";\n\n// material ui items\nimport { createTheme } from '@mui/material/styles';\nimport { Button } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport Slider from '@mui/material/Slider';\nimport VolumeDown from '@mui/icons-material/VolumeDown';\nimport VolumeOff from '@mui/icons-material/VolumeOff';\nimport VolumeUp from '@mui/icons-material/VolumeUp';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const playerRef = useRef(null);\n  const playerContainerRef = useRef(null);\n  const [duration, setDuration] = useState(0);\n  const [played, setPlayed] = useState(0);\n  const [playing, setPlaying] = useState(false);\n  const [showSpeedOptions, setShowSpeedOptions] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(0.5);\n  const [originVolume, setOriginVolume] = useState(0.5);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: '#EA80FC'\n      }\n      // secondary: pink,\n    }\n  });\n  ////////////////////////////////////  progress bar /////////////////////////\n  // load total length of vidoe\n  const handleDuration = duration => {\n    setDuration(duration);\n  };\n\n  // load current played seconds\n  const handleOnProgress = data => {\n    // console.log(data)\n    setPlayed(data.playedSeconds);\n  };\n\n  // move video on slider bar change\n  const handleSliderChange = (event, newValue) => {\n    setPlayed(newValue);\n    if (playerRef.current) {\n      playerRef.current.seekTo(newValue);\n    }\n  };\n  // stop/play\n  const togglePlayPause = () => {\n    if (playing) {\n      setPlaying(false);\n      props.setScreenShot(captureScreenshot());\n    } else {\n      setPlaying(true);\n      props.setScreenShot();\n    }\n  };\n\n  //////////////////////////////////// volume  /////////////////////////\n  const handleVolumeChange = (event, newValue) => {\n    setVolume(newValue);\n    setOriginVolume(originVolume);\n    // console.log(volume)\n  };\n\n  const toggleVolumeMute = e => {\n    if (volume) {\n      setVolume(0);\n    } else {\n      setVolume(originVolume);\n    }\n  };\n  const toggleVolumeUp = e => {\n    if (volume < 1) {\n      setVolume(Math.min(1, volume + 0.1));\n    }\n  };\n\n  ////////////////////////////////////  playback speed /////////////////////////\n  // change playback speed\n  //Only supported by YouTube, Wistia, and file paths!!!!!!!\n  const buttons = [/*#__PURE__*/_jsxDEV(Button, {\n    theme: theme,\n    id: \"playback-speed-0.5\",\n    onClick: setPlayBackSpeed,\n    children: \"0.5x\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    theme: theme,\n    id: \"playback-speed-0.75\",\n    onClick: setPlayBackSpeed,\n    children: \"0.75x\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    theme: theme,\n    id: \"playback-speed-1\",\n    onClick: setPlayBackSpeed,\n    children: \"1x\"\n  }, \"3\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    theme: theme,\n    id: \"playback-speed-1.5\",\n    onClick: setPlayBackSpeed,\n    children: \"1.5x\"\n  }, \"4\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    theme: theme,\n    id: \"playback-speed-2\",\n    onClick: setPlayBackSpeed,\n    children: \"2x\"\n  }, \"5\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this)];\n  function toggleShowSpeedOptions(e) {\n    e.preventDefault();\n    setShowSpeedOptions(!showSpeedOptions);\n  }\n  function setPlayBackSpeed(e) {\n    e.preventDefault();\n    let speed = parseFloat(e.target.id.substring(15));\n    setPlaybackRate(speed);\n    console.log(playbackRate);\n    toggleShowSpeedOptions(e);\n  }\n\n  //////////////////////////////////// full screen  //////////////////////////\n  // const toggleFullScreen = (e) => {\n  //     setIsFullScreen(!isFullScreen);\n  // }\n  // const playerStyle = isFullScreen ? {\n  //     position: 'fixed',\n  //     top: 0,\n  //     left: 0,\n  //     width: '100%',\n  //     height: '100%'\n  // } : {}\n  const handleToggleFullscreen = () => {\n    if (playerRef.current) {\n      if (!document.fullscreenElement) {\n        playerRef.current.requestFullscreen().catch(err => {\n          console.error(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n        });\n      } else {\n        document.exitFullscreen();\n      }\n    }\n  };\n\n  ////////////////////////////////////  screen shot /////////////////////////\n  //get screenshot\n  const captureScreenshot = () => {\n    if (playerRef.current) {\n      // Try to access the video element directly\n      const videoElement = playerRef.current.getInternalPlayer('player');\n\n      // Make sure it's a video element\n      if (videoElement && videoElement.tagName === 'VIDEO') {\n        const canvas = document.createElement('canvas');\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n        const image = canvas.toDataURL('image/png');\n        return image;\n        // downloadImage(image, 'screenshot.png');\n      } else {\n        console.error('Unable to access video element');\n      }\n    }\n  };\n\n  // \n  useImperativeHandle(ref, () => {\n    return {\n      pauseVideo() {\n        setPlaying(false);\n      },\n      captureScreenshot\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"react-player-container\",\n      ref: playerContainerRef,\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer\n      // url={'https://www.youtube.com/watch?v=d46Azg3Pm4c'}\n      , {\n        ref: playerRef,\n        url: props.videoURL,\n        onDuration: handleDuration,\n        onProgress: handleOnProgress,\n        playing: playing,\n        volume: volume,\n        playbackRate: playbackRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      id: \"video-progress-bar\",\n      defaultValue: 0,\n      max: duration,\n      \"aria-label\": \"Default\",\n      value: played,\n      onChange: handleSliderChange,\n      valueLabelDisplay: \"auto\",\n      theme: theme,\n      playbackRate: playbackRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player-menu\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: togglePlayPause,\n        theme: theme,\n        children: playing ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: IconStop,\n          alt: \"btn stop icon\",\n          className: \"icon-stop video-control-btn-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: IconContinue,\n          alt: \"btn stop continue\",\n          className: \"video-control-btn-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        id: \"video-volume\",\n        spacing: 2,\n        direction: \"row\",\n        sx: {\n          mb: 1\n        },\n        alignItems: \"center\",\n        children: [volume === 0 ? /*#__PURE__*/_jsxDEV(VolumeOff, {\n          onClick: toggleVolumeMute,\n          className: \"video-volume-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(VolumeDown, {\n          onClick: toggleVolumeMute,\n          className: \"video-volume-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          \"aria-label\": \"Volume\",\n          min: 0,\n          max: 1,\n          step: 0.01,\n          value: volume,\n          theme: theme,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VolumeUp, {\n          onClick: toggleVolumeUp,\n          className: \"video-volume-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"video-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"video-time-span video-time-current\",\n          children: formatTime(played)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"video-time-span\",\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"video-time-span video-time-total\",\n          children: formatTime(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"video-speed-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"video-speed\",\n          variant: \"contained\",\n          onClick: toggleShowSpeedOptions,\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: IconSpeed,\n            alt: \"icon for video playback speed\",\n            className: \"video-control-btn-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          id: \"video-speed-options\",\n          sx: {\n            display: 'flex',\n            '& > *': {\n              m: 1\n            }\n          },\n          children: showSpeedOptions && /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            orientation: \"vertical\",\n            \"aria-label\": \"vertical outlined button group\",\n            variant: \"contained\",\n            theme: theme,\n            children: buttons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleToggleFullscreen,\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: IconFullScreen,\n          alt: \"icon for playing video in full screen\",\n          className: \"video-control-btn-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}, \"oNzfjmE/QOOiyU9A9E31mfveXBE=\")), \"oNzfjmE/QOOiyU9A9E31mfveXBE=\");\n_c2 = VideoPlayer;\nexport default VideoPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoPlayer$forwardRef\");\n$RefreshReg$(_c2, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useRef","forwardRef","useImperativeHandle","ReactPlayer","formatTime","IconStop","IconContinue","IconSpeed","IconFullScreen","createTheme","Button","Stack","Slider","VolumeDown","VolumeOff","VolumeUp","ButtonGroup","Box","jsxDEV","_jsxDEV","VideoPlayer","_s","_c","props","ref","playerRef","playerContainerRef","duration","setDuration","played","setPlayed","playing","setPlaying","showSpeedOptions","setShowSpeedOptions","playbackRate","setPlaybackRate","volume","setVolume","originVolume","setOriginVolume","isFullScreen","setIsFullScreen","theme","palette","primary","main","handleDuration","handleOnProgress","data","playedSeconds","handleSliderChange","event","newValue","current","seekTo","togglePlayPause","setScreenShot","captureScreenshot","handleVolumeChange","toggleVolumeMute","e","toggleVolumeUp","Math","min","buttons","id","onClick","setPlayBackSpeed","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleShowSpeedOptions","preventDefault","speed","parseFloat","target","substring","console","log","handleToggleFullscreen","document","fullscreenElement","requestFullscreen","catch","err","error","message","name","exitFullscreen","videoElement","getInternalPlayer","tagName","canvas","createElement","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","image","toDataURL","pauseVideo","className","url","videoURL","onDuration","onProgress","defaultValue","max","value","onChange","valueLabelDisplay","variant","src","alt","spacing","direction","sx","mb","alignItems","step","display","m","orientation","_c2","$RefreshReg$"],"sources":["/home/yhx/Projects/AnnVideo/Frontend/src/components/VideoPlayer.js"],"sourcesContent":["import React,{useState, useRef, forwardRef, useImperativeHandle} from 'react';\nimport ReactPlayer from 'react-player'\nimport \"../assets/css/video.css\";\nimport { formatTime } from '../utils/utils';\n\n//icons\nimport IconStop from \"../assets/icon/stop.svg\";\nimport IconContinue from \"../assets/icon/continue.svg\";\nimport IconSpeed from \"../assets/icon/playback speed.svg\";\nimport IconFullScreen from \"../assets/icon/full-screen.svg\";\n\n// material ui items\nimport { createTheme } from '@mui/material/styles';\nimport { Button } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport Slider from '@mui/material/Slider';\nimport VolumeDown from '@mui/icons-material/VolumeDown';\nimport VolumeOff from '@mui/icons-material/VolumeOff';\nimport VolumeUp from '@mui/icons-material/VolumeUp';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Box from '@mui/material/Box';\n\n\nconst VideoPlayer= forwardRef((props, ref) => {\n    const playerRef = useRef(null);\n    const playerContainerRef = useRef(null);\n\n    const [duration, setDuration] = useState(0);\n    const [played, setPlayed] = useState(0);\n    const [playing, setPlaying] = useState(false);\n    const [showSpeedOptions, setShowSpeedOptions] = useState(false);\n    const [playbackRate, setPlaybackRate] = useState(1);\n    const [volume, setVolume] = useState(0.5);\n    const [originVolume, setOriginVolume] = useState(0.5);\n    const [isFullScreen, setIsFullScreen] = useState(false);\n\n    const theme = createTheme({\n        palette: {\n            primary: {main: '#EA80FC'},\n            // secondary: pink,\n          },\n      });\n    ////////////////////////////////////  progress bar /////////////////////////\n    // load total length of vidoe\n    const handleDuration = (duration) => {\n      setDuration(duration);\n    };  \n\n    // load current played seconds\n    const handleOnProgress = (data) => {\n        // console.log(data)\n        setPlayed(data.playedSeconds)\n    }\n\n    // move video on slider bar change\n    const handleSliderChange = (event, newValue) => {\n        setPlayed(newValue);\n        if (playerRef.current) {\n            playerRef.current.seekTo(newValue);\n        }\n    };\n    // stop/play\n    const togglePlayPause = () => {\n        if(playing){\n            setPlaying(false);\n            props.setScreenShot(captureScreenshot());\n        }else{\n            setPlaying(true);\n            props.setScreenShot();\n        }\n       \n    };\n\n    //////////////////////////////////// volume  /////////////////////////\n    const handleVolumeChange = (event, newValue) => {\n        setVolume(newValue);\n        setOriginVolume(originVolume);\n        // console.log(volume)\n    }\n\n    const toggleVolumeMute = (e) => {\n        if(volume){\n            setVolume(0);\n        }else{\n            setVolume(originVolume);\n        }\n    }\n\n    const toggleVolumeUp = (e) => {\n        if(volume < 1){\n            setVolume(Math.min(1, volume + 0.1));\n        }\n    }\n\n\n    ////////////////////////////////////  playback speed /////////////////////////\n    // change playback speed\n    //Only supported by YouTube, Wistia, and file paths!!!!!!!\n    const buttons = [\n        <Button key=\"1\" theme={theme} id=\"playback-speed-0.5\" onClick={setPlayBackSpeed}>0.5x</Button>,\n        <Button key=\"2\" theme={theme} id=\"playback-speed-0.75\" onClick={setPlayBackSpeed}>0.75x</Button>,\n        <Button key=\"3\" theme={theme} id=\"playback-speed-1\" onClick={setPlayBackSpeed}>1x</Button>,\n        <Button key=\"4\" theme={theme} id=\"playback-speed-1.5\" onClick={setPlayBackSpeed}>1.5x</Button>,\n        <Button key=\"5\" theme={theme} id=\"playback-speed-2\" onClick={setPlayBackSpeed}>2x</Button>,\n    ];\n    function toggleShowSpeedOptions(e){\n        e.preventDefault();\n        setShowSpeedOptions(!showSpeedOptions);\n    }\n    function setPlayBackSpeed(e){\n        e.preventDefault();\n        let speed = parseFloat(e.target.id.substring(15));\n        setPlaybackRate(speed);\n        console.log(playbackRate);\n        toggleShowSpeedOptions(e);\n    }\n\n    //////////////////////////////////// full screen  //////////////////////////\n    // const toggleFullScreen = (e) => {\n    //     setIsFullScreen(!isFullScreen);\n    // }\n    // const playerStyle = isFullScreen ? {\n    //     position: 'fixed',\n    //     top: 0,\n    //     left: 0,\n    //     width: '100%',\n    //     height: '100%'\n    // } : {}\n    const handleToggleFullscreen = () => {\n        if (playerRef.current) {\n          if (!document.fullscreenElement) {\n            playerRef.current.requestFullscreen().catch(err => {\n              console.error(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n            });\n          } else {\n            document.exitFullscreen();\n          }\n        }\n      };\n\n    ////////////////////////////////////  screen shot /////////////////////////\n    //get screenshot\n    const captureScreenshot = () => {\n        if (playerRef.current) {\n            // Try to access the video element directly\n            const videoElement = playerRef.current.getInternalPlayer('player');\n    \n            // Make sure it's a video element\n            if (videoElement && videoElement.tagName === 'VIDEO') {\n                const canvas = document.createElement('canvas');\n                canvas.width = videoElement.videoWidth;\n                canvas.height = videoElement.videoHeight;\n    \n                const ctx = canvas.getContext('2d');\n                ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n    \n                const image = canvas.toDataURL('image/png');\n                return image;\n                // downloadImage(image, 'screenshot.png');\n            } else {\n                console.error('Unable to access video element');\n            }\n        }\n    };\n    \n    // \n    useImperativeHandle(ref, () => {\n        return {\n            pauseVideo(){\n                setPlaying(false);\n            },\n            captureScreenshot,\n        }\n    }, [])\n\n\n\n    return (\n        <div className='video-player'>\n            <div className='react-player-container'ref={playerContainerRef}>\n                <ReactPlayer \n                // url={'https://www.youtube.com/watch?v=d46Azg3Pm4c'}\n                ref={playerRef}\n                url={props.videoURL}\n                onDuration={handleDuration}\n                onProgress={handleOnProgress}\n                playing={playing}\n                volume={volume}\n                playbackRate={playbackRate}\n                \n                />\n            </div>\n\n\n            <Slider \n                    id=\"video-progress-bar\"\n                    defaultValue={0} \n                    max={duration}                         \n                    aria-label=\"Default\" \n                    value={played} \n                    onChange={handleSliderChange}\n                    valueLabelDisplay=\"auto\"\n                    theme={theme}\n                    playbackRate={playbackRate}\n            />\n\n            <div className='video-player-menu'>\n                <Button variant=\"contained\"  onClick={togglePlayPause} theme={theme}>\n                    {\n                        playing ?                     \n                        <img src={IconStop} alt=\"btn stop icon\" className='icon-stop video-control-btn-icon'></img>\n                        :\n                        <img src={IconContinue} alt=\"btn stop continue\" className='video-control-btn-icon'></img>\n                    }\n                </Button>\n                <Stack id=\"video-volume\" spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\n                    {\n                        volume === 0 ?\n                        <VolumeOff onClick={toggleVolumeMute} className='video-volume-icon'/>\n                        :\n                        <VolumeDown onClick={toggleVolumeMute} className='video-volume-icon'/>\n                    }\n                    <Slider aria-label=\"Volume\" min={0} max={1} step={0.01} value={volume} theme={theme} onChange={handleVolumeChange}/>\n                    <VolumeUp onClick={toggleVolumeUp} className='video-volume-icon'/>\n                </Stack>\n                \n                <div id=\"video-time\">\n                    <span id=\"video-time-span video-time-current\">{formatTime(played)}</span>\n                    <span id=\"video-time-span\">/</span>\n                    <span id=\"video-time-span video-time-total\">{formatTime(duration)}</span>\n                </div>\n                \n                <div id='video-speed-container'>\n                    <Button id=\"video-speed\" variant=\"contained\"  onClick={toggleShowSpeedOptions} theme={theme}>\n                        <img src={IconSpeed} alt=\"icon for video playback speed\" className='video-control-btn-icon'></img>\n                    </Button>\n                    \n                    <Box id=\"video-speed-options\" sx={{display: 'flex','& > *': {m: 1,},}}>\n                        {showSpeedOptions && \n                            <ButtonGroup orientation=\"vertical\" aria-label=\"vertical outlined button group\" variant=\"contained\" theme={theme}>\n                               {buttons}\n                           </ButtonGroup>\n                        }\n                    </Box>\n                </div>\n\n                \n                <Button variant=\"contained\"  onClick={handleToggleFullscreen} theme={theme}>\n                    <img src={IconFullScreen} alt=\"icon for playing video in full screen\" className='video-control-btn-icon'></img>\n                </Button>\n            </div>\n        </div>\n        \n    );\n})\n\nexport default VideoPlayer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}