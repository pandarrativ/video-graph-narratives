{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/AnnVideo/Frontend/src/components/ImageCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport \"../assets/css/canvas.css\";\nimport { boxColors } from '../assets/utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageCanvas(props) {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  const [canvas, setCanvas] = useState();\n  const [ctx, setCtx] = useState();\n  // const [canvasBox, setCanvasBox] = useState();\n  const [ctxBox, setCtxBox] = useState();\n  // calculate the x-y of the canvas\n  const [offsetX, setOffsetX] = useState();\n  const [offsetY, setOffsetY] = useState();\n  const canvasRef = useRef();\n  const canvasBoxRef = useRef();\n  useEffect(() => {\n    const imageCanvas = canvasRef.current;\n    setCanvas(imageCanvas);\n    setCtx(imageCanvas.getContext(\"2d\"));\n    setOffsetX(imageCanvas.getBoundingClientRect().left);\n    setOffsetY(imageCanvas.getBoundingClientRect().top);\n    console.log(\"offsetX \", imageCanvas.offsetLeft);\n    imageCanvas.getContext(\"2d\").strokeStyle = \"green\";\n    imageCanvas.getContext(\"2d\").strokeRect(10, 10, 50, 60);\n    setCtxBox(canvasBoxRef.current.getContext(\"2d\"));\n  }, []);\n  useEffect(() => {});\n\n  ///////////////////// for drawing one box ////////////////////////////\n  //  flag: where user is dragging the box\n  const [isDown, setIsDown] = useState(false);\n  const [startX, setStartX] = useState();\n  const [startY, setStartY] = useState();\n  const [prevStartX, setPrevStartX] = useState(0);\n  const [prevStartY, setPrevStartY] = useState(0);\n  const [prevWidth, setPrevWidth] = useState(0);\n  const [prevHeight, setPrevHeight] = useState(0);\n  const handleMouseUp = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // the drag is over, clear the dragging flag\n    setIsDown(false);\n    ctxBox.strokeRect(prevStartX, prevStartY, prevWidth, prevHeight);\n  };\n  const handleMouseDown = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const rect = canvasRef.current.getBoundingClientRect();\n    const currentOffsetX = rect.left;\n    const currentOffsetY = rect.top;\n    setStartX(parseInt(e.clientX - currentOffsetX + window.scrollX));\n    setStartY(parseInt(e.clientY - currentOffsetY + window.scrollY));\n    setIsDown(true);\n  };\n  const handleMouseMove = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isDown) {\n      return;\n    }\n    const rect = canvasRef.current.getBoundingClientRect();\n    const currentOffsetX = rect.left;\n    const currentOffsetY = rect.top;\n    let mouseX = parseInt(e.clientX - currentOffsetX + window.scrollX);\n    let mouseY = parseInt(e.clientY - currentOffsetY + window.scrollY);\n    var width = mouseX - startX;\n    var height = mouseY - startY;\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    ctx.strokeRect(startX, startY, width, height);\n    setPrevStartX(startX);\n    setPrevStartY(startY);\n    setPrevWidth(width);\n    setPrevHeight(height);\n  };\n  const handleMouseOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // the drag is over, clear the dragging flag\n    setIsDown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvaxBox\",\n      ref: canvasBoxRef,\n      height: 500,\n      width: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"imageCanvas\",\n      height: 500,\n      width: 500,\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseMove: handleMouseMove,\n      onMouseOut: handleMouseOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageCanvas, \"s8syRPh/ylhAsQwC2dQd/9m5Q5k=\");\n_c = ImageCanvas;\nexport default ImageCanvas;\nvar _c;\n$RefreshReg$(_c, \"ImageCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","boxColors","jsxDEV","_jsxDEV","ImageCanvas","props","_s","boxes","setBoxes","canvas","setCanvas","ctx","setCtx","ctxBox","setCtxBox","offsetX","setOffsetX","offsetY","setOffsetY","canvasRef","canvasBoxRef","imageCanvas","current","getContext","getBoundingClientRect","left","top","console","log","offsetLeft","strokeStyle","strokeRect","isDown","setIsDown","startX","setStartX","startY","setStartY","prevStartX","setPrevStartX","prevStartY","setPrevStartY","prevWidth","setPrevWidth","prevHeight","setPrevHeight","handleMouseUp","e","preventDefault","stopPropagation","handleMouseDown","rect","currentOffsetX","currentOffsetY","parseInt","clientX","window","scrollX","clientY","scrollY","handleMouseMove","mouseX","mouseY","width","height","clearRect","handleMouseOut","id","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseUp","onMouseMove","onMouseOut","_c","$RefreshReg$"],"sources":["/home/yhx/Projects/AnnVideo/Frontend/src/components/ImageCanvas.js"],"sourcesContent":["import React,{useRef, useEffect, useState} from 'react';\nimport \"../assets/css/canvas.css\";\nimport { boxColors } from '../assets/utils/utils';\n\nfunction ImageCanvas(props) {\n    const [boxes, setBoxes] = useState([]);\n    const [canvas, setCanvas] = useState();\n    const [ctx, setCtx] = useState();\n    // const [canvasBox, setCanvasBox] = useState();\n    const [ctxBox, setCtxBox] = useState();\n    // calculate the x-y of the canvas\n    const [offsetX, setOffsetX] = useState();\n    const [offsetY, setOffsetY] = useState();\n\n    const canvasRef = useRef();\n    const canvasBoxRef = useRef();\n    useEffect(() => {\n        const imageCanvas = canvasRef.current;\n        setCanvas(imageCanvas);\n        setCtx(imageCanvas.getContext(\"2d\"));\n        setOffsetX(imageCanvas.getBoundingClientRect().left);\n        setOffsetY(imageCanvas.getBoundingClientRect().top)\n\n        console.log( \"offsetX \" ,imageCanvas.offsetLeft)\n\n        imageCanvas.getContext(\"2d\").strokeStyle = \"green\";\n        imageCanvas.getContext(\"2d\").strokeRect(10, 10, 50, 60);\n\n        setCtxBox(canvasBoxRef.current.getContext(\"2d\"));\n    },[])\n\n    useEffect(() => {})\n\n\n\n\n    ///////////////////// for drawing one box ////////////////////////////\n    //  flag: where user is dragging the box\n    const [isDown, setIsDown] = useState(false);\n    const [startX, setStartX] = useState();\n    const [startY, setStartY] = useState();\n\n    const [prevStartX, setPrevStartX] = useState(0);\n    const [prevStartY, setPrevStartY] = useState(0);\n\n    const [prevWidth, setPrevWidth] = useState(0);\n    const [prevHeight, setPrevHeight] = useState(0);    \n\n\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // the drag is over, clear the dragging flag\n        setIsDown(false);\n        ctxBox.strokeRect(prevStartX, prevStartY, prevWidth, prevHeight);\n    }\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        const rect = canvasRef.current.getBoundingClientRect();\n        const currentOffsetX = rect.left;\n        const currentOffsetY = rect.top;\n    \n        setStartX(parseInt(e.clientX - currentOffsetX + window.scrollX));\n        setStartY(parseInt(e.clientY - currentOffsetY + window.scrollY));\n    \n        setIsDown(true);\n    };\n    \n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        if (!isDown) {\n            return;\n        }\n    \n        const rect = canvasRef.current.getBoundingClientRect();\n        const currentOffsetX = rect.left;\n        const currentOffsetY = rect.top;\n    \n        let mouseX = parseInt(e.clientX - currentOffsetX + window.scrollX);\n        let mouseY = parseInt(e.clientY - currentOffsetY + window.scrollY);\n    \n        var width = mouseX - startX;\n        var height = mouseY - startY;\n    \n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.strokeRect(startX, startY, width, height);\n    \n        setPrevStartX(startX);\n        setPrevStartY(startY);\n        setPrevWidth(width);\n        setPrevHeight(height);\n    };\n\n    const handleMouseOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // the drag is over, clear the dragging flag\n        setIsDown(false);\n    }\n\n\n    return (\n        <div id='canvas-wrapper'>\n            <canvas id=\"canvaxBox\" ref={canvasBoxRef} height={500} width={500}></canvas>\n            <canvas \n                id=\"imageCanvas\"\n                height={500} \n                width={500}\n                ref={canvasRef} \n                onMouseDown={handleMouseDown} \n                onMouseUp={handleMouseUp}\n                onMouseMove={handleMouseMove}\n                onMouseOut={handleMouseOut}\n            ></canvas>\n            \n        </div>\n\n    );\n}\n\nexport default ImageCanvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}