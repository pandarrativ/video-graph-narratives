{"ast":null,"code":"export const boxColors = [\"#845EC2\", \"#F9F871\", \"#2C73D2\", \"#D65DB1\", \"#008F7A\", \"#FF6F91\", \"#FF9671\", \"#00C9A7\"];\nexport function secsTomins(seconds) {\n  const h = Math.floor(seconds / 3600);\n  const m = Math.floor(seconds % 3600 / 60);\n  const s = Math.floor(seconds % 3600 % 60);\n  const hDisplay = h > 0 ? h + \":\" : \"\";\n  const mDisplay = m < 10 ? \"0\" + m : m;\n  const sDisplay = s < 10 ? \"0\" + s : s;\n  return hDisplay + mDisplay + \":\" + sDisplay;\n}\nexport function secsToPercent(seconds, totalSeconds) {}\nexport function minsToSecs(mins) {}\nexport const formatTime = time => {\n  //formarting duration of video\n  if (isNaN(time)) {\n    return \"00:00\";\n  }\n  const date = new Date(time * 1000);\n  const hours = date.getUTCHours();\n  const minutes = date.getUTCMinutes();\n  const seconds = date.getUTCSeconds().toString().padStart(2, \"0\");\n  if (hours) {\n    //if video have hours\n    return `${hours}:${minutes.toString().padStart(2, \"0\")} `;\n  } else return `${minutes}:${seconds}`;\n};","map":{"version":3,"names":["boxColors","secsTomins","seconds","h","Math","floor","m","s","hDisplay","mDisplay","sDisplay","secsToPercent","totalSeconds","minsToSecs","mins","formatTime","time","isNaN","date","Date","hours","getUTCHours","minutes","getUTCMinutes","getUTCSeconds","toString","padStart"],"sources":["/home/yhx/Projects/Ann/Frontend/src/utils/utils.js"],"sourcesContent":["export const boxColors = [\n    \"#845EC2\",\n    \"#F9F871\",\n    \"#2C73D2\",\n    \"#D65DB1\",\n    \"#008F7A\",\n    \"#FF6F91\",\n    \"#FF9671\",\n    \"#00C9A7\",  \n];\n\nexport function secsTomins(seconds){\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor(seconds % 3600 / 60);\n    const s = Math.floor(seconds % 3600 % 60);\n\n    const hDisplay = h > 0 ? h + \":\" : \"\";\n    const mDisplay = m < 10 ? \"0\" + m : m;\n    const sDisplay = s < 10 ? \"0\" + s : s;\n    \n    return hDisplay + mDisplay + \":\" + sDisplay;\n}\n\nexport function secsToPercent(seconds, totalSeconds){\n    \n}\n\nexport function minsToSecs(mins){\n\n}\n\n\n\nexport const formatTime = (time) => {\n    //formarting duration of video\n    if (isNaN(time)) {\n      return \"00:00\";\n    }\n\n    const date = new Date(time * 1000);\n    const hours = date.getUTCHours();\n    const minutes = date.getUTCMinutes();\n    const seconds = date.getUTCSeconds().toString().padStart(2, \"0\");\n    if (hours) {\n      //if video have hours\n      return `${hours}:${minutes.toString().padStart(2, \"0\")} `;\n    } else return `${minutes}:${seconds}`;\n};\n\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CACrB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACZ;AAED,OAAO,SAASC,UAAUA,CAACC,OAAO,EAAC;EAC/B,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,IAAI,CAAC;EACpC,MAAMI,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;EACzC,MAAMK,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;EAEzC,MAAMM,QAAQ,GAAGL,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAG,EAAE;EACrC,MAAMM,QAAQ,GAAGH,CAAC,GAAG,EAAE,GAAG,GAAG,GAAGA,CAAC,GAAGA,CAAC;EACrC,MAAMI,QAAQ,GAAGH,CAAC,GAAG,EAAE,GAAG,GAAG,GAAGA,CAAC,GAAGA,CAAC;EAErC,OAAOC,QAAQ,GAAGC,QAAQ,GAAG,GAAG,GAAGC,QAAQ;AAC/C;AAEA,OAAO,SAASC,aAAaA,CAACT,OAAO,EAAEU,YAAY,EAAC,CAEpD;AAEA,OAAO,SAASC,UAAUA,CAACC,IAAI,EAAC,CAEhC;AAIA,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAChC;EACA,IAAIC,KAAK,CAACD,IAAI,CAAC,EAAE;IACf,OAAO,OAAO;EAChB;EAEA,MAAME,IAAI,GAAG,IAAIC,IAAI,CAACH,IAAI,GAAG,IAAI,CAAC;EAClC,MAAMI,KAAK,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;EAChC,MAAMC,OAAO,GAAGJ,IAAI,CAACK,aAAa,CAAC,CAAC;EACpC,MAAMrB,OAAO,GAAGgB,IAAI,CAACM,aAAa,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAChE,IAAIN,KAAK,EAAE;IACT;IACA,OAAQ,GAAEA,KAAM,IAAGE,OAAO,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE;EAC3D,CAAC,MAAM,OAAQ,GAAEJ,OAAQ,IAAGpB,OAAQ,EAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}