{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/AnnVideo/Frontend/src/components/ChatBox.js\",\n  _s = $RefreshSig$();\n// components/ChatBox.js\n\nimport React, { useState } from 'react';\nimport { IoSendSharp } from 'react-icons/io5'; // Import the send icon\nimport '../assets/css/ChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const handleUserMessage = async () => {\n    if (!userInput.trim()) return;\n\n    // Send user message to OpenAI API and get a response\n\n    // Update messages with user message and OpenAI response\n    setMessages([...messages, {\n      role: 'user',\n      name: \"\",\n      content: userInput\n    }]);\n\n    // Clear user input after sending the message\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box-title\",\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: msg.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), msg.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserMessage,\n        className: \"send-button\",\n        children: [/*#__PURE__*/_jsxDEV(IoSendSharp, {\n          size: 22,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"HfxAD2MO2c7ZhY4vijqw2/NvqkQ=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","IoSendSharp","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","userInput","setUserInput","handleUserMessage","trim","role","name","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onClick","size","color","_c","$RefreshReg$"],"sources":["/home/yhx/Projects/AnnVideo/Frontend/src/components/ChatBox.js"],"sourcesContent":["// components/ChatBox.js\n\nimport React, { useState } from 'react';\nimport { IoSendSharp } from 'react-icons/io5'; // Import the send icon\nimport '../assets/css/ChatBox.css';\n\nconst ChatBox = () => {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  const handleUserMessage = async () => {\n    if (!userInput.trim()) return;\n\n    // Send user message to OpenAI API and get a response\n \n\n    // Update messages with user message and OpenAI response\n    setMessages([\n      ...messages,\n      { role: 'user', name:\"\",content: userInput },\n    ]);\n\n    // Clear user input after sending the message\n    setUserInput('');\n  };\n\n  return (\n    <div className=\"chat-box\">\n      <div className=\"chat-box-title\">Conversation</div>\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={msg.role}>\n            <div className=\"message-content\">\n              <div className=\"name\">{msg.name}</div>\n              {msg.content}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"user-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n        />\n        <button onClick={handleUserMessage} className=\"send-button\">\n          <IoSendSharp size={22} color=\"#fff\" /> {/* Use the IoSendSharp icon */}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}