{"ast":null,"code":"var _jsxFileName = \"/home/yhx/Projects/AnnVideo/Frontend/src/components/ImageCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageCanvas(props) {\n  _s();\n  const [boxes, setBoxes] = useState([]);\n  const [ctx, setCtx] = useState();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    setCtx(canvas.getContext(\"2d\"));\n    ctx.fillStyle = \"green\";\n    ctx.fillRect(10, 10, 150, 100);\n    ctx.fillRect(20, 20, 180, 130);\n  }, []);\n\n  ///////////////////// for drawing one box ////////////////////////////\n  // calculate the x-y of the canvas\n  var canvasOffset = canvasRef.current.offset();\n  var offsetX = canvasOffset.left;\n  var offsetY = canvasOffset.top;\n  var scrollX = canvasRef.current.scrollLeft();\n  var scrollY = canvasRef.current.scrollTop();\n  //  flag: where user is dragging the box\n  const [isDown, setIsDown] = useState(false);\n  const [startX, setStartX] = useState();\n  const [startY, setStartY] = useState();\n  const [prevStartX, setPrevStartX] = useState(0);\n  const [prevStartY, setPrevStartY] = useState(0);\n  const [prevWidth, setPrevWidth] = useState(0);\n  const [prevHeight, setPrevHeight] = useState(0);\n  const handleMouseDown = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // save the starting x/y of the rectangle\n    setStartX(parseInt(e.clientX - offsetX));\n    setStartY(parseInt(e.clientY - offsetY));\n\n    // set a flag indicating the drag has begun\n    setIsDown(true);\n  };\n  const handleMouseUp = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // the drag is over, clear the dragging flag\n    isDown = false;\n    canvasRef.current.strokeRect(prevStartX, prevStartY, prevWidth, prevHeight);\n  };\n  const handleMouseMove = () => {};\n  const handleMouseOut = () => {};\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onMouseMove: handleMouseMove,\n    onMouseOut: handleMouseOut\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageCanvas, \"xAb5sWUXgu7ngOoS7++oXnLeLro=\");\n_c = ImageCanvas;\nexport default ImageCanvas;\nvar _c;\n$RefreshReg$(_c, \"ImageCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ImageCanvas","props","_s","boxes","setBoxes","ctx","setCtx","canvasRef","canvas","current","getContext","fillStyle","fillRect","canvasOffset","offset","offsetX","left","offsetY","top","scrollX","scrollLeft","scrollY","scrollTop","isDown","setIsDown","startX","setStartX","startY","setStartY","prevStartX","setPrevStartX","prevStartY","setPrevStartY","prevWidth","setPrevWidth","prevHeight","setPrevHeight","handleMouseDown","e","preventDefault","stopPropagation","parseInt","clientX","clientY","handleMouseUp","strokeRect","handleMouseMove","handleMouseOut","ref","onMouseDown","onMouseUp","onMouseMove","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yhx/Projects/AnnVideo/Frontend/src/components/ImageCanvas.js"],"sourcesContent":["import React,{useRef, useEffect, useState} from 'react';\n\nfunction ImageCanvas(props) {\n    const [boxes, setBoxes] = useState([]);\n    const [ctx, setCtx] = useState();\n\n    const canvasRef = useRef();\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        setCtx(canvas.getContext(\"2d\"));\n\n        ctx.fillStyle = \"green\";\n        ctx.fillRect(10, 10, 150, 100);\n        ctx.fillRect(20, 20, 180, 130);\n    },[])\n\n\n\n    ///////////////////// for drawing one box ////////////////////////////\n    // calculate the x-y of the canvas\n    var canvasOffset = canvasRef.current.offset();\n    var offsetX = canvasOffset.left;\n    var offsetY = canvasOffset.top;\n    var scrollX = canvasRef.current.scrollLeft();\n    var scrollY = canvasRef.current.scrollTop();\n    //  flag: where user is dragging the box\n    const [isDown, setIsDown] = useState(false);\n    const [startX, setStartX] = useState();\n    const [startY, setStartY] = useState();\n\n    const [prevStartX, setPrevStartX] = useState(0);\n    const [prevStartY, setPrevStartY] = useState(0);\n\n    const [prevWidth, setPrevWidth] = useState(0);\n    const [prevHeight, setPrevHeight] = useState(0);    \n\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // save the starting x/y of the rectangle\n        setStartX( parseInt(e.clientX - offsetX) );\n        setStartY(parseInt(e.clientY - offsetY));\n    \n        // set a flag indicating the drag has begun\n        setIsDown(true);\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    \n        // the drag is over, clear the dragging flag\n        isDown = false;\n        canvasRef.current.strokeRect(prevStartX, prevStartY, prevWidth, prevHeight);\n    }\n\n    const handleMouseMove = () => {\n\n    }\n\n\n    const handleMouseOut = () => {\n\n    }\n\n\n    return (\n        <canvas \n            ref={canvasRef} \n            onMouseDown={handleMouseDown} \n            onMouseUp={handleMouseUp}\n            onMouseMove={handleMouseMove}\n            onMouseOut={handleMouseOut}\n        ></canvas>\n    );\n}\n\nexport default ImageCanvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAEhC,MAAMU,SAAS,GAAGZ,MAAM,CAAC,CAAC;EAC1BC,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChCH,MAAM,CAACE,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC,CAAC;IAE/BL,GAAG,CAACM,SAAS,GAAG,OAAO;IACvBN,GAAG,CAACO,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IAC9BP,GAAG,CAACO,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EAClC,CAAC,EAAC,EAAE,CAAC;;EAIL;EACA;EACA,IAAIC,YAAY,GAAGN,SAAS,CAACE,OAAO,CAACK,MAAM,CAAC,CAAC;EAC7C,IAAIC,OAAO,GAAGF,YAAY,CAACG,IAAI;EAC/B,IAAIC,OAAO,GAAGJ,YAAY,CAACK,GAAG;EAC9B,IAAIC,OAAO,GAAGZ,SAAS,CAACE,OAAO,CAACW,UAAU,CAAC,CAAC;EAC5C,IAAIC,OAAO,GAAGd,SAAS,CAACE,OAAO,CAACa,SAAS,CAAC,CAAC;EAC3C;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC4B,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,CAAC;EACtC,MAAM,CAAC8B,MAAM,EAAEC,SAAS,CAAC,GAAG/B,QAAQ,CAAC,CAAC;EAEtC,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACsC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EAG/C,MAAMwC,eAAe,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBD,CAAC,CAACE,eAAe,CAAC,CAAC;;IAEnB;IACAd,SAAS,CAAEe,QAAQ,CAACH,CAAC,CAACI,OAAO,GAAG3B,OAAO,CAAE,CAAC;IAC1Ca,SAAS,CAACa,QAAQ,CAACH,CAAC,CAACK,OAAO,GAAG1B,OAAO,CAAC,CAAC;;IAExC;IACAO,SAAS,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMoB,aAAa,GAAIN,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBD,CAAC,CAACE,eAAe,CAAC,CAAC;;IAEnB;IACAjB,MAAM,GAAG,KAAK;IACdhB,SAAS,CAACE,OAAO,CAACoC,UAAU,CAAChB,UAAU,EAAEE,UAAU,EAAEE,SAAS,EAAEE,UAAU,CAAC;EAC/E,CAAC;EAED,MAAMW,eAAe,GAAGA,CAAA,KAAM,CAE9B,CAAC;EAGD,MAAMC,cAAc,GAAGA,CAAA,KAAM,CAE7B,CAAC;EAGD,oBACIhD,OAAA;IACIiD,GAAG,EAAEzC,SAAU;IACf0C,WAAW,EAAEZ,eAAgB;IAC7Ba,SAAS,EAAEN,aAAc;IACzBO,WAAW,EAAEL,eAAgB;IAC7BM,UAAU,EAAEL;EAAe;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAElB;AAACtD,EAAA,CA3EQF,WAAW;AAAAyD,EAAA,GAAXzD,WAAW;AA6EpB,eAAeA,WAAW;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}